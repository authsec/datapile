<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Datapile</title><link href="https://authsec.github.io/datapile/" rel="alternate"></link><link href="https://authsec.github.io/datapile/feeds/all.atom.xml" rel="self"></link><id>https://authsec.github.io/datapile/</id><updated>2020-09-28T22:22:00+02:00</updated><subtitle>Against Digital Amnesia</subtitle><entry><title>My First Post</title><link href="https://authsec.github.io/datapile/my-first-post" rel="alternate"></link><published>2020-09-28T22:22:00+02:00</published><updated>2020-09-28T22:22:00+02:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2020-09-28:/datapile/my-first-post</id><summary type="html">&lt;p class="first last"&gt;Nothing much to&amp;nbsp;see&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This is so amazing. It&amp;#8217;s my first&amp;nbsp;post.&lt;/p&gt;
&lt;div class="section" id="why"&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I guess just for the fun of&amp;nbsp;it.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Programming, Java"></category><category term="thats"></category><category term="awesome"></category></entry><entry><title>How To Start A Consul Docker Image</title><link href="https://authsec.github.io/datapile/how-to-start-a-consul-docker-image" rel="alternate"></link><published>2016-09-20T21:48:12+01:00</published><updated>2016-09-20T21:48:12+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2016-09-20:/datapile/how-to-start-a-consul-docker-image</id><summary type="html">&lt;p class="first last"&gt;How to start a local consul&amp;nbsp;server.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you quickly have to start a &lt;a class="reference external" href="https://www.consul.io/"&gt;Consul&lt;/a&gt;  docker image you can use the following&amp;nbsp;command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
docker run -p 8400:8400 -p 127.0.0.1:8500:8500 -p 8600:8600/udp -h node1 consul agent -dev -client 0.0.0.0
&lt;/pre&gt;
&lt;p&gt;This is especially useful for development purposes and quick tests and should not be used in a productive&amp;nbsp;environment.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Consul"></category><category term="Database"></category></entry><entry><title>Pro Tools - Playlists</title><link href="https://authsec.github.io/datapile/pro-tools-playlists" rel="alternate"></link><published>2015-09-03T19:36:55+02:00</published><updated>2015-09-03T19:36:55+02:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2015-09-03:/datapile/pro-tools-playlists</id><summary type="html">&lt;p class="first last"&gt;How to start a local consul&amp;nbsp;server.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;When working with Pro Tools you may find yourself in a position where you need to create a few takes of for example a chorus. Instead of creating a completely new track for every take you do, you can simply create what is called a playlist in Pro&amp;nbsp;Tools.&lt;/p&gt;
&lt;div class="section" id="shortcut"&gt;
&lt;h2&gt;Shortcut&lt;/h2&gt;
&lt;p&gt;You can create a playlist using the right control key and the backslash symbol like &lt;code&gt;RCTRL - \ &lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There is also another shortcut assigned if you may not have remapped it in &lt;span class="caps"&gt;OS&lt;/span&gt; X or it may be mapped to something else by default. That shortcut would be &lt;code&gt;LCMD - LALT - LSHIFT - \ &lt;/code&gt; where the letter &lt;code&gt;L&lt;/code&gt; denotes the keys on the left side of the keyboard are&amp;nbsp;pressed.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Music"></category><category term="Pro Tools"></category><category term="Cheat Sheet"></category><category term="Shortcuts"></category></entry><entry><title>Grenade - Cover Version</title><link href="https://authsec.github.io/datapile/grenade-cover-version" rel="alternate"></link><published>2011-12-31T12:34:56+01:00</published><updated>2011-12-31T12:34:56+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2011-12-31:/datapile/grenade-cover-version</id><summary type="html">&lt;p class="first last"&gt;Just listen&amp;nbsp;&amp;#8230;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;For the first time ever I am on YouTube! So feel free to check out the cover version of Bruno Mars&amp;#8217; song&amp;nbsp;&amp;#8220;Grenade&amp;#8221;.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/RXEA6_zJXLk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;Hope you enjoy&amp;nbsp;it!&lt;/p&gt;
</content><category term="Music"></category><category term="Song"></category><category term="Cover Version"></category></entry><entry><title>Unser Lied</title><link href="https://authsec.github.io/datapile/unser-lied" rel="alternate"></link><published>2011-09-25T14:00:34+01:00</published><updated>2011-09-25T14:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2011-09-25:/datapile/unser-lied</id><summary type="html">&lt;p class="first last"&gt;Just Listen&amp;nbsp;&amp;#8230;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;Deutsch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dieses Lied hab ich für die Hochzeit zwischen Ilka und Alexander geschrieben. Ich hoffe beide werden eine lange Zeit Freude an diesem Lied&amp;nbsp;haben.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I wrote this song for the wedding between Ilka and Alexander. I very much hope they both enjoy the title for a long&amp;nbsp;time.&lt;/p&gt;
&lt;div class="section" id="the-song"&gt;
&lt;h2&gt;The&amp;nbsp;Song&lt;/h2&gt;
&lt;iframe width="100%" height="300" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/24129103&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&amp;visual=true"&gt;&lt;/iframe&gt;&lt;div style="font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;"&gt;&lt;a href="https://soundcloud.com/john-c-flow" title="John C. Flow" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;John C. Flow&lt;/a&gt; · &lt;a href="https://soundcloud.com/john-c-flow/unser-lied" title="Unser Lied" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;Unser Lied&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Can be found at: &lt;a class="reference external" href="https://soundcloud.com/john-c-flow/unser-lied"&gt;https://soundcloud.com/john-c-flow/unser-lied&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-lyrics"&gt;
&lt;h2&gt;The&amp;nbsp;Lyrics&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Words &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; Music: Jens Frey&lt;/div&gt;
&lt;div class="line"&gt;Tempo: 83 &lt;span class="caps"&gt;BPM&lt;/span&gt;&lt;/div&gt;
&lt;div class="line"&gt;Key: D&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verse"&gt;
&lt;h3&gt;Verse&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[D]Komm her,&lt;/div&gt;
&lt;div class="line"&gt;Halt mich [A]fest,&lt;/div&gt;
&lt;div class="line"&gt;Nimm [Hm]mich in Deine Arme,&lt;/div&gt;
&lt;div class="line"&gt;[G]Hier und [Gm]jetzt.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Ich [A]will Dich [D]fühln,&lt;/div&gt;
&lt;div class="line"&gt;ganz nah bei [A]mir,&lt;/div&gt;
&lt;div class="line"&gt;Will [Hm]deinen Atem spürn,&lt;/div&gt;
&lt;div class="line"&gt;Der mich [G]wärmt,&lt;/div&gt;
&lt;div class="line"&gt;so dass ich nicht [Gm]frier.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Ich will Dich [D]halten,&lt;/div&gt;
&lt;div class="line"&gt;für [A]immer in meinem Arm,&lt;/div&gt;
&lt;div class="line"&gt;könnt auf [Hm]ewig mit Dir tanzen,&lt;/div&gt;
&lt;div class="line"&gt;doch die Mu[G]sik ist nicht mehr [Gm]an.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bridge"&gt;
&lt;h3&gt;Bridge&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[Em]Ich schalt das [D]Radio ein,&lt;/div&gt;
&lt;div class="line"&gt;Ich [Em]dreh voll [D]auf,&lt;/div&gt;
&lt;div class="line"&gt;[Em]Spürst du den [D]Beat?&lt;/div&gt;
&lt;div class="line"&gt;Komm [A]Tanz mit mir,&lt;/div&gt;
&lt;div class="line"&gt;denn&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="chorus"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Das unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;in dem die [A]Zeit nie entflieht,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [F#m]der Moment gefangen,&lt;/div&gt;
&lt;div class="line"&gt;In [G]dem wir uns ver-[Gm]liebt,&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Das ist unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;In dem uns [A]nichts passieren kann,&lt;/div&gt;
&lt;div class="line"&gt;Hier sind wir [Hm]beide unverwundbar,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [G]sichrer Hafen,&lt;/div&gt;
&lt;div class="line"&gt;[A]Sichres Ge[D]biet.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Verse&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[D]Ich will immerzu,&lt;/div&gt;
&lt;div class="line"&gt;in [A]Deiner Nähe sein,&lt;/div&gt;
&lt;div class="line"&gt;bin immer [Hm]mit Dir in Gedanken,&lt;/div&gt;
&lt;div class="line"&gt;e[G]gal wo ich [Gm]bin,&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Kann [A]einfach [D]nicht,&lt;/div&gt;
&lt;div class="line"&gt;ohne Deine [A]Liebe sein,&lt;/div&gt;
&lt;div class="line"&gt;Brauch sie [Hm]wie die Luft zum atmen,&lt;/div&gt;
&lt;div class="line"&gt;[G]lass mich nie al-[Gm]lein.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Bridge&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[Em]Ich schalt das [D]Radio ein,&lt;/div&gt;
&lt;div class="line"&gt;Ich [Em]dreh voll [D]auf,&lt;/div&gt;
&lt;div class="line"&gt;[Em]Spürst du den [D]Beat?&lt;/div&gt;
&lt;div class="line"&gt;Komm [A]Tanz mit mir,&lt;/div&gt;
&lt;div class="line"&gt;denn&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Das ist unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;in dem die [A]Zeit nie entflieht,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [F#m]der Moment gefangen,&lt;/div&gt;
&lt;div class="line"&gt;In [G]dem wir uns ver-[Gm]liebt,&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Das ist unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;In dem uns [A]nichts passieren kann,&lt;/div&gt;
&lt;div class="line"&gt;Hier sind wir [Hm]beide unverwundbar,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [A]sichrer Hafen,&lt;/div&gt;
&lt;div class="line"&gt;[A]Sichres Ge[D]biet.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="solo"&gt;
&lt;h3&gt;Solo&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[D/A/Hm/G/A D/A/Hm/A/A/D ]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Das ist unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;in dem die [A]Zeit nie entflieht,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [F#m]der Moment gefangen,&lt;/div&gt;
&lt;div class="line"&gt;In [G]dem wir uns ver-[Gm]liebt,&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Das ist unser [D]Lied,&lt;/div&gt;
&lt;div class="line"&gt;In dem uns [A]nichts passieren kann,&lt;/div&gt;
&lt;div class="line"&gt;Hier sind wir [Hm]beide unverwundbar,&lt;/div&gt;
&lt;div class="line"&gt;Hier ist [G]sichrer Hafen,&lt;/div&gt;
&lt;div class="line"&gt;[A]Sichres Ge[D]biet.&lt;/div&gt;
&lt;div class="line"&gt;[G]Lass es uns nie ver-[A]gessen, unser [D]Lied&lt;/div&gt;
&lt;div class="line"&gt;[G]Lass es uns nie ver-[A]gessen, unser [D]Lied&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Music"></category><category term="Original"></category><category term="Song"></category><category term="Lyrics"></category></entry><entry><title>Goondown</title><link href="https://authsec.github.io/datapile/goondown" rel="alternate"></link><published>2011-02-17T14:00:34+01:00</published><updated>2011-02-17T14:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2011-02-17:/datapile/goondown</id><summary type="html">&lt;p class="first last"&gt;Just listen&amp;nbsp;&amp;#8230;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Just playing around with the software, seems to be a mix between Trance and Easy Listening&amp;nbsp;&amp;#8230;&lt;/p&gt;
&lt;iframe width="100%" height="166" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/10714605&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true"&gt;&lt;/iframe&gt;&lt;div style="font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;"&gt;&lt;a href="https://soundcloud.com/john-c-flow" title="John C. Flow" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;John C. Flow&lt;/a&gt; · &lt;a href="https://soundcloud.com/john-c-flow/goondown" title="Goondown" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;Goondown&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Can be found at: &lt;a class="reference external" href="https://soundcloud.com/john-c-flow/goondown"&gt;https://soundcloud.com/john-c-flow/goondown&lt;/a&gt;&lt;/p&gt;
</content><category term="Music"></category><category term="Original"></category><category term="Song"></category></entry><entry><title>Goodbye</title><link href="https://authsec.github.io/datapile/goodbye" rel="alternate"></link><published>2011-01-30T14:00:34+01:00</published><updated>2011-01-30T14:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2011-01-30:/datapile/goodbye</id><summary type="html">&lt;p class="first last"&gt;Just listen&amp;nbsp;&amp;#8230;&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="the-song"&gt;
&lt;h2&gt;The&amp;nbsp;song&lt;/h2&gt;
&lt;iframe width="100%" height="166" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/9807219&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true"&gt;&lt;/iframe&gt;&lt;div style="font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;"&gt;&lt;a href="https://soundcloud.com/john-c-flow" title="John C. Flow" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;John C. Flow&lt;/a&gt; · &lt;a href="https://soundcloud.com/john-c-flow/goodbye" title="Goodbye" target="_blank" style="color: #cccccc; text-decoration: none;"&gt;Goodbye&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Can be found at: &lt;a class="reference external" href="https://soundcloud.com/john-c-flow/goodbye"&gt;https://soundcloud.com/john-c-flow/goodbye&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-lyrics"&gt;
&lt;h2&gt;The&amp;nbsp;lyrics&lt;/h2&gt;
&lt;div class="section" id="verse"&gt;
&lt;h3&gt;Verse&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[F#m]Like a lonesome voice, [A]in the crowd,&lt;/div&gt;
&lt;div class="line"&gt;[F#m]like a broken toy, [A]left on the ground,&lt;/div&gt;
&lt;div class="line"&gt;[Bm]I feel like I&amp;#8217;ve been left behind, [D]been canceled out,&lt;/div&gt;
&lt;div class="line"&gt;[Bm]no one&amp;#8217;s right here by my side,&lt;/div&gt;
&lt;div class="line"&gt;[Esus4]no one is a[E]round.&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;[F#m]I&amp;#8217;ve been on this empty road, [A]for quite some time,&lt;/div&gt;
&lt;div class="line"&gt;[F#m]I&amp;#8217;ve been searching out for love, [A]but never could find mine.&lt;/div&gt;
&lt;div class="line"&gt;[Bm]It always ran away from me, [D]I never was that fast,&lt;/div&gt;
&lt;div class="line"&gt;[Bm]I had just a simple dream, [D]but it couldn&amp;#8217;t l[Esus4]a&amp;#8212;-a[E]st &amp;#8230;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="chorus"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]my [E]everlasting dre[A]am,&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E] [A]&lt;/div&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]love is [E]never like it s[A]eems&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E]&lt;/div&gt;
&lt;div class="line"&gt;Cause when there&amp;#8217;s [Dmaj7]love there&amp;#8217;s misery,&lt;/div&gt;
&lt;div class="line"&gt;which is a[Asus2/C#]lways finding me,&lt;/div&gt;
&lt;div class="line"&gt;love has a b[Bm]etter place to [Esus4]be,&lt;/div&gt;
&lt;div class="line"&gt;like [F#5]me.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Verse&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[F#m]If only I could understand, [A]why it is me,&lt;/div&gt;
&lt;div class="line"&gt;[F#m]is it just my bad luck or my [A]destiny?&lt;/div&gt;
&lt;div class="line"&gt;[Bm]what is it what the others do? what [D]is it? Please tell me.&lt;/div&gt;
&lt;div class="line"&gt;[Bm]I guess I will never know, so I say [D]goodbye to my [Esus4]drea&amp;#8212;[E]m.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]my [E]everlasting dre[A]am,&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E] [A]&lt;/div&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]love is [E]never like it s[A]eems&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E]&lt;/div&gt;
&lt;div class="line"&gt;The only [D]thing I [E]now do [F#m]fear,&lt;/div&gt;
&lt;div class="line"&gt;is [D]someone [E]getting [F#m]near,&lt;/div&gt;
&lt;div class="line"&gt;Who will [D]brake my [E]heart and [F#m]then,&lt;/div&gt;
&lt;div class="line"&gt;I have to [Esus4]say goodbye ag[E]ain.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="solo-over"&gt;
&lt;h3&gt;Solo&amp;nbsp;over&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[A][C#m7][D][E]&lt;/div&gt;
&lt;div class="line"&gt;[A][C#m7][D][E]&lt;/div&gt;
&lt;div class="line"&gt;[A][C#m7][D][E]&lt;/div&gt;
&lt;div class="line"&gt;[Dmaj7][C#m7][Esus4][E]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Chorus&lt;/h3&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]my [E]everlasting dre[A]am,&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E] [A]&lt;/div&gt;
&lt;div class="line"&gt;[A]Good-[C#m7]bye, [D]love is [E]never like it s[A]eems&lt;/div&gt;
&lt;div class="line"&gt;[A] [C#m7] [D] [E]&lt;/div&gt;
&lt;div class="line"&gt;Cause when there&amp;#8217;s [Dmaj7]love there&amp;#8217;s misery,&lt;/div&gt;
&lt;div class="line"&gt;which is a[Asus2/C#]lways finding me,&lt;/div&gt;
&lt;div class="line"&gt;love has a b[Bm]etter place to [Esus4]be,&lt;/div&gt;
&lt;div class="line"&gt;like [F#5]me.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Music"></category><category term="Original"></category><category term="Song"></category></entry><entry><title>Use your own website as OpenID login</title><link href="https://authsec.github.io/datapile/use-your-own-website-as-openid-login" rel="alternate"></link><published>2010-11-12T14:00:34+01:00</published><updated>2010-12-04T18:40:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2010-11-12:/datapile/use-your-own-website-as-openid-login</id><summary type="html">&lt;p class="first last"&gt;This article will show you how to use the OpenID delegation feature which allows you to use your own domain as an identifier for&amp;nbsp;OpenID.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you want to use OpenID as an authentication mechanism, but are
afraid of the fact that your OpenID provider may die in the future, or
you simply might want to use another provider in the future, you can
use a delegation model with&amp;nbsp;OpenID.&lt;/p&gt;
&lt;p&gt;A reason to change the OpenID provider might be, that your current
OpenID provider does not support an authentication mechanism you like
to, as for example the YubiKey or something like&amp;nbsp;that.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s say you want to use &lt;a class="reference external" href="http://xyz.example.com"&gt;http://xyz.example.com&lt;/a&gt; as your OpenID and
you want to use &lt;a class="reference external" href="http://clavid.com"&gt;http://clavid.com&lt;/a&gt; as your Identity Provider, you have to
execute the following&amp;nbsp;steps.&lt;/p&gt;
&lt;div class="section" id="create-a-sub-domain-for-example-com-called-xyz"&gt;
&lt;h2&gt;Create a (sub-)domain for example.com called&amp;nbsp;xyz.&lt;/h2&gt;
&lt;p&gt;This can for example be done by adding another virtual host to your
apache configuration. The configuration might look like the following&amp;nbsp;one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class="s"&gt;xx.xx.xx.xx:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;ServerAdmin&lt;/span&gt; webmaster@example.com
        &lt;span class="nb"&gt;ServerName&lt;/span&gt; xyz.example.com

        &lt;span class="nb"&gt;DocumentRoot&lt;/span&gt; &lt;span class="sx"&gt;/var/www/xyz/&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="s"&gt;/var/www/xyz/&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="c"&gt;# Options Indexes MultiViews&lt;/span&gt;
                &lt;span class="nb"&gt;AllowOverride&lt;/span&gt; &lt;span class="k"&gt;None&lt;/span&gt;
                &lt;span class="nb"&gt;Order&lt;/span&gt; allow,deny
                &lt;span class="nb"&gt;allow&lt;/span&gt; from &lt;span class="k"&gt;all&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

        &lt;span class="nb"&gt;ErrorLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/apache2/error_xyz.log&lt;/span&gt;

        &lt;span class="c"&gt;# Possible values include: debug, info, notice, warn, error, crit,&lt;/span&gt;
        &lt;span class="c"&gt;# alert, emerg.&lt;/span&gt;

        &lt;span class="nb"&gt;LogLevel&lt;/span&gt; &lt;span class="k"&gt;warn&lt;/span&gt;
        &lt;span class="nb"&gt;CustomLog&lt;/span&gt; &lt;span class="sx"&gt;/var/log/apache2/access_xyz.log&lt;/span&gt; combined
&lt;span class="nt"&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-index-html-file-inside-your-document-root"&gt;
&lt;h2&gt;Create a index.html file inside your document&amp;nbsp;root&lt;/h2&gt;
&lt;p&gt;As a next step you have to create a index.html file in your document
root (in this case &lt;span class="file"&gt;/var/www/xyz&lt;/span&gt;) with the following content in order
for OpenID services being able to find your current identity&amp;nbsp;provider:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Jens&amp;#39; OpenID delegation page&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;openid.server&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.clavid.com/provider/openid&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;openid2.provider&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.clavid.com/provider/openid&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;openid.delegate&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://jens.clavid.com&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;openid2.local_id&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://jens.clavid.com&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;This page is used for OpenID delegation.&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        For more information on OpenID either visit
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://openid.net&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;http://openid.net&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; or
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://clavid.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;http://clavid.com&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ready"&gt;
&lt;h2&gt;Ready&lt;/h2&gt;
&lt;p&gt;From now on you can use &lt;a class="reference external" href="http://xyz.example.com"&gt;http://xyz.example.com&lt;/a&gt; as your OpenID, which will, as currently configured, be redirecting to &lt;a class="reference external" href="http://clavid.com"&gt;http://clavid.com&lt;/a&gt; where authentication will take&amp;nbsp;place.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;You can read all about OpenID in the specification, but the part used for this example is available&amp;nbsp;at:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://openid.net/specs/openid-authentication-1_1.html#delegating_authentication"&gt;http://openid.net/specs/openid-authentication-1_1.html#delegating_authentication&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Security"></category><category term="OpenID"></category><category term="Security"></category></entry><entry><title>Programming with the APR</title><link href="https://authsec.github.io/datapile/programming-with-the-apr" rel="alternate"></link><published>2010-11-01T10:00:34+01:00</published><updated>2010-11-01T10:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2010-11-01:/datapile/programming-with-the-apr</id><summary type="html">&lt;p class="first last"&gt;This article will give you an introduction of how to program with the Apache Portable Runtime (&lt;span class="caps"&gt;APR&lt;/span&gt;).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This article will give you an introduction of how to program with the
Apache Portable Runtime (&lt;span class="caps"&gt;APR&lt;/span&gt;). It illustrates a simple command line&amp;nbsp;program.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The program supplied should actually use &lt;code&gt;apr_app_initialize(&amp;amp;argc, &amp;amp;argv, NULL);&lt;/code&gt; since &lt;code&gt;apr_initialize()&lt;/code&gt; is intended for library use&amp;nbsp;only.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I was playing around with the Apache Portable Runtime (&lt;span class="caps"&gt;APR&lt;/span&gt;) recently and found out, probably the most difficult part was to find out how to compile the program you have just written. The probably most famous projects using &lt;span class="caps"&gt;APR&lt;/span&gt; are the Apache HTTPd and&amp;nbsp;Subversion.&lt;/p&gt;
&lt;div class="section" id="overview"&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;span class="caps"&gt;APR&lt;/span&gt;&amp;#8217;s goal is to provide a platform independent &lt;span class="caps"&gt;API&lt;/span&gt; that provides a consistent interface to the platform specific implementation. The &lt;span class="caps"&gt;APR&lt;/span&gt; code itself is pretty good documented. But i wouldn&amp;#8217;t say you&amp;#8217;d find plenty of resources on the web. Especially a simple example on how to program with the &lt;span class="caps"&gt;APR&lt;/span&gt; was missing for&amp;nbsp;me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="example-program"&gt;
&lt;h2&gt;Example&amp;nbsp;program&lt;/h2&gt;
&lt;p&gt;I put together an example program which shows how to use the &lt;span class="caps"&gt;APR&lt;/span&gt;. This includes instructions on how to get the program compiled after you have written it. This seems to be so self-evident to people, that no one seems to write that up. The heart of this process lies in the usage of the &lt;code&gt;apr-config&lt;/code&gt;, or sometimes called &lt;code&gt;apr-1-config&lt;/code&gt; utility.&lt;/p&gt;
&lt;div class="section" id="preconditions"&gt;
&lt;h3&gt;Preconditions&lt;/h3&gt;
&lt;p&gt;Make sure you have the &lt;span class="caps"&gt;APR&lt;/span&gt; development files installed. Since i am mostly working with Debian based distributions, like Debian itself or Ubuntu, i install the libraries with my package management system. Of course make sure you install the &amp;#8220;-dev&amp;#8221; versions of &lt;span class="caps"&gt;APR&lt;/span&gt;. For me that have been the&amp;nbsp;packages&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;libapr1&lt;/li&gt;
&lt;li&gt;libapr1-dbg&lt;/li&gt;
&lt;li&gt;libapr1-dev&lt;/li&gt;
&lt;li&gt;libaprutil1&lt;/li&gt;
&lt;li&gt;libaprutil1-dbg&lt;/li&gt;
&lt;li&gt;libaprutil1-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can get those packages by issuing the following command on the command line (this may of course vary if you are not using a Debian based distribution or if you install from&amp;nbsp;source):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo apt-get install libapr1 libapr1-dbg libapr1-dev libaprutil1 libaprutil1-dbg libaprutil1-dev
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="program-code"&gt;
&lt;h3&gt;Program&amp;nbsp;code&lt;/h3&gt;
&lt;p&gt;The program itself is obviously a pretty easy one, it basically allocates resources from a memory pool managed through &lt;span class="caps"&gt;APR&lt;/span&gt; onto a struct and later simply prints the allocated values. The programs code is as&amp;nbsp;follows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compile-the-program"&gt;
&lt;h3&gt;Compile the&amp;nbsp;program&lt;/h3&gt;
&lt;p&gt;Now there comes the next crucial step in getting your program to fly. To do so you probably best export a variable as suggested by the &lt;code&gt;apr-1-config&lt;/code&gt; tool. Then you can go on an compile your program the &amp;#8220;normal&amp;#8221; way you&amp;#8217;d do that. If you do not want debug symbols compiled into your code, you of course would remove the &lt;code&gt;-g&lt;/code&gt; option in front of the &lt;code&gt;APR_LIBS&lt;/code&gt; variable:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$&amp;gt; export APR_LIBS=&amp;quot;`apr-1-config --cflags --cppflags --includes --ldflags --link-ld --libs`&amp;quot;
$&amp;gt; gcc -g simple_apr.c -o simple_apr $APR_LIBS
&lt;/pre&gt;
&lt;p&gt;By executing the program your output should now look something like&amp;nbsp;that:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ./simple_apr
Username: Jens Frey
Password: secret
Time: 1231102877630911
Time readable: Sun, 04 Jan 2009 21:01:17 GMT
&lt;/pre&gt;
&lt;p&gt;I hope you achieved similar&amp;nbsp;results.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://apr.apache.org/"&gt;The &lt;span class="caps"&gt;APR&lt;/span&gt;&amp;nbsp;homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://apr.apache.org/docs/apr/trunk/"&gt;The &lt;span class="caps"&gt;APR&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://svn.apache.org/viewvc/apr/apr/trunk/docs/pool-design.html?view=co"&gt;Using &lt;span class="caps"&gt;APR&lt;/span&gt;&amp;nbsp;Pools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.apache.org/~rooneg/talks/portable-c-with-apr/apr.html"&gt;Writing Portable C Code with &lt;span class="caps"&gt;APR&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Programming"></category><category term="APR"></category><category term="Apache"></category><category term="C"></category></entry><entry><title>Free iPhone Ringtone #1</title><link href="https://authsec.github.io/datapile/free-iphone-ringtone-1" rel="alternate"></link><published>2010-10-31T11:11:11+01:00</published><updated>2010-10-31T11:11:11+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2010-10-31:/datapile/free-iphone-ringtone-1</id><summary type="html">&lt;p class="first last"&gt;Just listen&amp;nbsp;&amp;#8230;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I created a free drum and bassy iPhone ringtone, install it if you like&amp;nbsp;:)&lt;/p&gt;
&lt;audio controls="controls"&gt;
      &lt;source src="https://authsec.github.io/datapile/downloads/nimmemol-ab.m4r" type="audio/mp4"&gt;
      Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.
&lt;/audio&gt;&lt;p&gt;&lt;a class="reference external" href="https://authsec.github.io/datapile/downloads/nimmemol-ab.m4r"&gt;Download iPhone Ringtone (&lt;span class="caps"&gt;M4R&lt;/span&gt;)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hope you have fun with it&amp;nbsp;&amp;#8230;&lt;/p&gt;
</content><category term="Music"></category><category term="Original"></category><category term="Ringtone"></category></entry><entry><title>Setup roller weblogger 4.1 on Glassfish v2</title><link href="https://authsec.github.io/datapile/setup-roller-weblogger-41-on-glassfish-v2" rel="alternate"></link><published>2010-10-31T11:11:11+01:00</published><updated>2010-10-31T11:11:11+01:00</updated><author><name>Jens Frey</name></author><id>tag:authsec.github.io,2010-10-31:/datapile/setup-roller-weblogger-41-on-glassfish-v2</id><summary type="html">&lt;p class="first last"&gt;This guide will walk you through installing the Apache Roller Blog Software, version&amp;nbsp;4.1(-dev).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This guide will walk you through installing the Apache Roller Blog Software, version 4.1(-dev). The installation I did, resides on a Debian based distribution (Ubuntu works too, just prefix the commands with&amp;nbsp;sudo).&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This was implemented/tested with Roller Weblogger 4.1 and Glassfish&amp;nbsp;v2UR2&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quick-install"&gt;
&lt;h2&gt;Quick&amp;nbsp;install&lt;/h2&gt;
&lt;p&gt;This is for the impatient, you need to have &lt;code&gt;jar&lt;/code&gt; and &lt;code&gt;wget&lt;/code&gt; in your $&lt;span class="caps"&gt;PATH&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If you just want to have roller to be set up for you to do e.g. some work on roller templates, or just to basically play with it a bit, here is the real quick deal for you (This will install everything into&amp;nbsp;/opt/roller).&lt;/p&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="https://raw.githubusercontent.com/authsec/examples/master/sh/rollerGlassfish.sh"&gt;automated installer script&lt;/a&gt;, save it to e.g. your home directory. Then call the script like &lt;code&gt;./rollerGlassfish.sh realLongKey1 realLongKey2 run-as-username run-as-groupname&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;You can get those long keys easily from &lt;a class="reference external" href="https://www.grc.com/passwords.htm"&gt;&lt;span class="caps"&gt;GRC&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="manual-installation"&gt;
&lt;h2&gt;Manual&amp;nbsp;installation&lt;/h2&gt;
&lt;p&gt;The following text basically describes what the script is automatically doing for you. This way you can change the according parameters which will affect your installation. Most probably you will just have to change the following variables inside the install&amp;nbsp;script.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;You have to install a few things before you can actually start installing roller on your system. At first you need to be sure that the &lt;code&gt;jar&lt;/code&gt; command is installed on your system, since this is required for the build you will be doing on your system. On a Debian based system you can do that with the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;root@sigusr1:$&lt;/span&gt; aptitude install sun-java5-jdk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the &lt;span class="caps"&gt;JDK&lt;/span&gt; installation you basically have everything ready to go, but wait if you want to use my &lt;a class="reference external" href="https://raw.githubusercontent.com/authsec/examples/master/sh/rollerGlassfish.sh"&gt;automated installer script&lt;/a&gt; you need to have the &lt;code&gt;wget&lt;/code&gt; command installed too, since the script tries to download the Glassfish application server and the given Apache Roller version by itself in order to be able to install it for&amp;nbsp;you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#&lt;/span&gt;
        &lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/roller
        &lt;span class="nv"&gt;TARGET_TMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/tmp
        &lt;span class="nv"&gt;UPLOADS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/uploads
        &lt;span class="nv"&gt;THEMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/themes
        &lt;span class="nv"&gt;PLANET_CACHE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/planetcache
        &lt;span class="nv"&gt;SEARCH_INDEX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/searchindex
        &lt;span class="c1"&gt;#ROLLER_FILENAME=&amp;quot;apache-roller-4.0.1-snapshot-20080211.tar.gz&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;ROLLER_FILENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apache-roller-4.1-snapshot-m1.tar.gz&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;CTX_ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blogs&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gist: &lt;a class="reference external" href="https://gist.github.com/authsec/455940a3f6bd5673c1c9dd16ea4ec0af"&gt;https://gist.github.com/authsec/455940a3f6bd5673c1c9dd16ea4ec0af&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://glassfish.dev.java.net/downloads/v2ur2-b04.html"&gt;Download&amp;nbsp;Glassfish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="choose-install-location"&gt;
&lt;h4&gt;Choose install&amp;nbsp;location&lt;/h4&gt;
&lt;p&gt;As a last prerequisite step you need to choose an install location. I chose &lt;code&gt;/opt/roller&lt;/code&gt; to be the install location of my&amp;nbsp;choice.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-user-and-group"&gt;
&lt;h3&gt;Setup user and&amp;nbsp;group&lt;/h3&gt;
&lt;p&gt;As you probably won&amp;#8217;t be running roller as root, you&amp;#8217;ll have to setup a user and a group for your roller installation. This, again on Debian based systems, is done using the following&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        mkdir /opt/roller
        addgroup --system roller
        adduser --home /opt/roller &lt;span class="se"&gt;\&lt;/span&gt;
        --shell /bin/bash &lt;span class="se"&gt;\&lt;/span&gt;
        --no-create-home &lt;span class="se"&gt;\&lt;/span&gt;
        --ingroup roller &lt;span class="se"&gt;\&lt;/span&gt;
        --disabled-password &lt;span class="se"&gt;\&lt;/span&gt;
        --system roller
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-glassfish"&gt;
&lt;h3&gt;Setup&amp;nbsp;Glassfish&lt;/h3&gt;
&lt;p&gt;I assume you downloaded roller and glassfish into &lt;code&gt;/opt/roller/tmp&lt;/code&gt;. In order to get the Glassfish installation working, you need to have &lt;code&gt;JAVA_HOME&lt;/code&gt; exported into your environment. Then you can start running the Glassfish installer. On a bourne shell do (inside the directory where you saved the Glassfish&amp;nbsp;installer):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/roller/tmp
        &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/java-1.5.0-sun
        java -Xmx256m -jar glassfish-installer-v2ur2-b04-linux.jar
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The installer will ask you if you are willing to accept the license agreement. If you are running this on a remote machine, it will ask you on the command line, whether or not you are willing to accept; on your local machine it will show a nice graphical dialog for you to accept. After that setup is completed, do (machine name is included, so you&amp;#8217;re able to see in which directory I&amp;#8217;m&amp;nbsp;operating)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/tmp$ mv glassfish ..
j@sigusr1:/opt/roller/tmp$ &lt;span class="nb"&gt;cd&lt;/span&gt; ../glassfish/
j@sigusr1:/opt/roller/glassfish$ chmod -R +x lib/ant/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a next step you have to setup a domain for roller within Glassfish, this is a rather easy task to&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/glassfish$ lib/ant/bin/ant -f setup.xml -Ddomain.name&lt;span class="o"&gt;=&lt;/span&gt;roller
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start Glassfish, so we can do s.th. with it&amp;nbsp;&amp;#8230;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/glassfish$ ./bin/asadmin start-domain roller
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="setup-built-in-database"&gt;
&lt;h4&gt;Setup built in&amp;nbsp;database&lt;/h4&gt;
&lt;p&gt;The following series of command all takes place inside the &lt;code&gt;/opt/roller/glassfish&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ ./bin/asadmin create-jdbc-connection-pool &lt;span class="se"&gt;\&lt;/span&gt;
        --datasourceclassname org.apache.derby.jdbc.EmbeddedDataSource &lt;span class="se"&gt;\&lt;/span&gt;
        --property &lt;span class="nv"&gt;databaseName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\$\{&lt;/span&gt;com.sun.aas.instanceRoot&lt;span class="se"&gt;\}&lt;/span&gt;/databases/rollerdb:&lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nv"&gt;connectionAttributes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\;&lt;/span&gt;create&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; rollerpool
        ./bin/asadmin ping-connection-pool rollerpool
        ./bin/asadmin create-jdbc-resource --connectionpoolid&lt;span class="o"&gt;=&lt;/span&gt;rollerpool jdbc/rollerdb
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-jndi-mail-resource"&gt;
&lt;h4&gt;Setup &lt;span class="caps"&gt;JNDI&lt;/span&gt; mail&amp;nbsp;resource&lt;/h4&gt;
&lt;p&gt;If that would work in roller 4.1(-dev) with Glassfish, you would&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ ./bin/asadmin create-javamail-resource --mailhost localhost --mailuser rollermail --fromaddress roller&lt;span class="se"&gt;\@&lt;/span&gt;blogs&lt;span class="se"&gt;\.&lt;/span&gt;coffeecrew&lt;span class="se"&gt;\.&lt;/span&gt;org mail/Session
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="securing-glassfish"&gt;
&lt;h4&gt;Securing&amp;nbsp;Glassfish&lt;/h4&gt;
&lt;p&gt;Some of you might be thinking about running Glassfish behind an Apache reverse proxy. This is exactly what I am thinking about. So if you plan to do that, it might come in handy that Glassfish would only accept connections from the local machine and therefore not let anyone easily bypass your secured apache instance. First we delete both &lt;span class="caps"&gt;HTTP&lt;/span&gt; listener instances that are listening on ports 8080 and 8443 and then recreate the 8080 one. As we are proxying with apache, we do not need the &lt;span class="caps"&gt;SSL&lt;/span&gt; listener (port 8443)&amp;nbsp;anyway.&lt;/p&gt;
&lt;p&gt;And while we&amp;#8217;re just doing it, let&amp;#8217;s rebind those &lt;span class="caps"&gt;IIOP&lt;/span&gt; services&amp;nbsp;to.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        ./bin/asadmin delete-http-listener http-listener-1
        ./bin/asadmin delete-http-listener http-listener-2
        ./bin/asadmin create-http-listener --listeneraddress &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 --listenerport &lt;span class="m"&gt;8080&lt;/span&gt; --acceptorthreads &lt;span class="m"&gt;32&lt;/span&gt; --enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; --defaultvs server --securityenabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; roller-listener

        &lt;span class="c1"&gt;# Configure admin page to listen locally too&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.http-service.http-listener.admin-listener.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1

        &lt;span class="c1"&gt;# Disable IIOP stuff to listen globally, we do not need that right now.&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.SSL.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.SSL_MUTUALAUTH.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.orb-listener-1.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1

        &lt;span class="c1"&gt;# Disable JMX connector for remote access&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.admin-service.jmx-connector.system.enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;

        &lt;span class="c1"&gt;# JMS&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.jms-service.jms-host.default_JMS_host.host&lt;span class="o"&gt;=&lt;/span&gt;localhost

        &lt;span class="c1"&gt;# Require client authentication, just to be sure ...&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.client-authentication-required&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to make changes effective we have to restart Glassfish. But before that we want to make sure everything has correct permissions for our newly created user, won&amp;#8217;t&amp;nbsp;we?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;# Fix permissions&lt;/span&gt;
        chown -R roller:roller /opt/roller

        &lt;span class="c1"&gt;# Restart gf to make changes effective&lt;/span&gt;
        ./bin/asadmin stop-domain roller

        &lt;span class="c1"&gt;# Start as roller user&lt;/span&gt;
        su -c &lt;span class="s2"&gt;&amp;quot;./bin/asadmin start-domain roller&amp;quot;&lt;/span&gt; roller
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-and-configure-roller"&gt;
&lt;h3&gt;Setup and configure&amp;nbsp;Roller&lt;/h3&gt;
&lt;p&gt;Setting up Roller 4.1(-dev) is pretty easy. We start by extracting the tarball we downloaded earlier. Since we have set our theme directory to be &lt;code&gt;/opt/roller/themes&lt;/code&gt; we do have to copy the themes we want to use there. As a next step we &lt;em&gt;really want to have security keys **changed**&lt;/em&gt;. This is done by either editing the &lt;code&gt;security.xml&lt;/code&gt; file manually or using a &lt;code&gt;sed&lt;/code&gt; expression. After we have changed the keys, we can pack us a nice &lt;code&gt;roller.war&lt;/code&gt; file. The few commands below execute the described&amp;nbsp;actions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Roller setup&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/roller/tmp
        tar zxvf apache-roller-4.1-snapshot-m1.tar.gz

        &lt;span class="c1"&gt;#Copy themes&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; apache-roller*/webapp/roller/themes
        cp -vR * /opt/roller/themes

        &lt;span class="nb"&gt;cd&lt;/span&gt; ../WEB-INF
        cp security.xml /tmp

        &lt;span class="c1"&gt;# actually change keys&lt;/span&gt;
        cat /tmp/security.xml &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        sed &lt;span class="s2"&gt;&amp;quot;s/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;anonymous\&amp;quot;/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;myOwnLongKey\&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        sed &lt;span class="s2"&gt;&amp;quot;s/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;rollerlovesacegi\&amp;quot;/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;myOwnLongKey2\&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        &amp;gt; security.xml

        &lt;span class="c1"&gt;#Pack war file&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; ..
        jar cvf ../../../roller.war *
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we&amp;#8217;re nearly finished &amp;#8230; just a few seconds away from experimenting with your own roller instance now :). As a next necessary step we need to create a custom configuration file for Roller. That configuration file has to be saved in &lt;code&gt;/opt/roller/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/code&gt; to take effect. The configuration file can be built as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Build roller-custom.properties&lt;/span&gt;
cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF &amp;gt; $TARGET/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/span&gt;

&lt;span class="s"&gt;installation.type=auto&lt;/span&gt;

&lt;span class="s"&gt;#Should work with JNDI but maybe not with glassfish&lt;/span&gt;
&lt;span class="s"&gt;mail.configurationType=properties&lt;/span&gt;
&lt;span class="s"&gt;mail.hostname=localhost&lt;/span&gt;

&lt;span class="s"&gt;planet.aggregator.enabled=true&lt;/span&gt;
&lt;span class="s"&gt;uploads.dir=$UPLOADS&lt;/span&gt;
&lt;span class="s"&gt;themes.dir=$THEMES&lt;/span&gt;
&lt;span class="s"&gt;search.index.dir=$SEARCH_INDEX&lt;/span&gt;
&lt;span class="s"&gt;planet.aggregator.cache.dir=$PLANET_CACHE&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that the configuration is in place, we are finally ready to deploy the Roller application. With the deployment we are able to specify a context root, which is the (&lt;span class="caps"&gt;URL&lt;/span&gt;) location where your application can be reached later on. So if you specify &lt;code&gt;blogs&lt;/code&gt; then your application can later be accessed at &lt;code&gt;http://your.example.com:8080/blogs&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Deploy application&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$TARGET&lt;/span&gt;/glassfish
        ./bin/asadmin deploy --contextroot blogs ../tmp/roller.war
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just to be sure everything you&amp;#8217;ve installed so far has correct permission, you might want to run the following commands again. It fixes your permissions and runs Glassfish as roller&amp;nbsp;user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;# Fix permissions&lt;/span&gt;
        chown -R roller:roller /opt/roller

        &lt;span class="c1"&gt;#Restart gf to make changes effective&lt;/span&gt;
        ./bin/asadmin stop-domain roller

        &lt;span class="c1"&gt;# Start as roller user&lt;/span&gt;
        su -c &lt;span class="s2"&gt;&amp;quot;./bin/asadmin start-domain roller&amp;quot;&lt;/span&gt; roller
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you&amp;#8217;ve done all that you now should have a ready to go roller installation. Now go visit &lt;code&gt;http://localhost:8080/blogs&lt;/code&gt; and configure your shiny new roller installation. It is pretty much self explanatory, but if you need further assistance, you might want to have a look into the installation guide, which you can get &lt;a class="reference external" href="http://roller.apache.org/download.cgi"&gt;here&lt;/a&gt; (see chapter&amp;nbsp;8ff).&lt;/p&gt;
&lt;p&gt;Now after you&amp;#8217;ve set up everything exactly as you like, you should change &lt;code&gt;/opt/roller/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/code&gt; to read &lt;code&gt;installation.type=manual&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Glassfish"></category><category term="Roller"></category></entry></feed>