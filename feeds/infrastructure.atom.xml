<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Datapile - Infrastructure</title><link href="https://datapile.coffeecrew.org/" rel="alternate"></link><link href="https://datapile.coffeecrew.org/feeds/infrastructure.atom.xml" rel="self"></link><id>https://datapile.coffeecrew.org/</id><updated>2020-12-13T22:33:44+01:00</updated><subtitle>Against Digital Amnesia</subtitle><entry><title>Run command as different user on Windows</title><link href="https://datapile.coffeecrew.org/run-command-as-different-user-on-windows" rel="alternate"></link><published>2020-12-13T22:33:44+01:00</published><updated>2020-12-13T22:33:44+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2020-12-13:/run-command-as-different-user-on-windows</id><summary type="html">&lt;p class="first last"&gt;How to get the &lt;span class="caps"&gt;IP&lt;/span&gt; address from host&amp;nbsp;group.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;There are times when you do want to run a command on Windows, such as for example a powershell window with elevated privileges. There may also be a reason that you want to run the command as an administrative user that is not named&amp;nbsp;&amp;#8216;Administrator&amp;#8217;.&lt;/p&gt;
&lt;p&gt;You can do this by spawning a non-privileged powershell window first. From there enter the command below, and, after entering your password, you should have an administrative&amp;nbsp;terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PS C:\Users\you&amp;gt; runas /user:theAdminUsername powershell
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way you can spawn a &amp;#8220;root&amp;#8221; Terminal in Windows as you would do with e.g. &lt;code&gt;sudo su -&lt;/code&gt; on a Linux&amp;nbsp;machine.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Windows 10"></category><category term="Powershell"></category></entry><entry><title>Get ansible_host from host group</title><link href="https://datapile.coffeecrew.org/get-ansible_host-from-host-group" rel="alternate"></link><published>2020-10-24T18:56:00+01:00</published><updated>2020-10-24T18:56:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2020-10-24:/get-ansible_host-from-host-group</id><summary type="html">&lt;p class="first last"&gt;How to get the &lt;span class="caps"&gt;IP&lt;/span&gt; address from host&amp;nbsp;group.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Assume you are working with this inventory (&lt;code&gt;hosts&lt;/code&gt;)&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;bootstrap&lt;span class="o"&gt;]&lt;/span&gt;
opihi.example.com &lt;span class="nv"&gt;ansible_host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;192&lt;/span&gt;.168.30.254 &lt;span class="nv"&gt;ansible_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;you &lt;span class="nv"&gt;ansible_password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{{ vault_opihi_you_user_password }}&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;ansible_python_interpreter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can get the &lt;span class="caps"&gt;IP&lt;/span&gt; address with the expression &lt;code&gt;{{ hostvars[groups['bootstrap'][0]].ansible_host }}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example&amp;nbsp;playbook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;---
- hosts: localhost

  tasks:
      - debug: &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;={{&lt;/span&gt; hostvars&lt;span class="o"&gt;[&lt;/span&gt;groups&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bootstrap&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;.ansible_host &lt;span class="o"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which will&amp;nbsp;output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; ansible-playbook -i inventories/prod/ debug.yml

    PLAY &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt; ********************************************************************************************************************************

    TASK &lt;span class="o"&gt;[&lt;/span&gt;Gathering Facts&lt;span class="o"&gt;]&lt;/span&gt; **************************************************************************************************************************
    ok: &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;

    TASK &lt;span class="o"&gt;[&lt;/span&gt;debug&lt;span class="o"&gt;]&lt;/span&gt; ************************************************************************************************************************************
    ok: &lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="o"&gt;{}&lt;/span&gt;

    MSG:

    &lt;span class="m"&gt;192&lt;/span&gt;.168.30.254

    PLAY RECAP **************************************************************************************************************************************
    localhost                  : &lt;span class="nv"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;    &lt;span class="nv"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;unreachable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;skipped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;rescued&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="nv"&gt;ignored&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Ansible"></category></entry><entry><title>Fixing Vagrant and VMware Fusion</title><link href="https://datapile.coffeecrew.org/fixing-vagrant-and-vmware-fusion" rel="alternate"></link><published>2020-10-21T21:56:00+01:00</published><updated>2020-10-21T21:56:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2020-10-21:/fixing-vagrant-and-vmware-fusion</id><summary type="html">&lt;p class="first last"&gt;This post shows you how you can fix the port forward conflict on host port&amp;nbsp;2222.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;For some reason &lt;a class="reference external" href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; is sometimes unable to start the virtual machine and aborts with an error message&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Some of the defined forwarded ports would collide with existing
forwarded ports on VMware network devices. This can be due to
existing Vagrant-managed VMware machines, or due to manually
configured port forwarding with VMware. Please fix the following
port collisions and try again:

&lt;span class="m"&gt;2222&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you run into that problem there are a few things that might help you fix them. You can for example shut down your &lt;code&gt;vagrant&lt;/code&gt; machine and remove it from the virtual machine &amp;#8220;Virtual Machines&amp;#8221; sidebar in the Fusion &lt;span class="caps"&gt;UI&lt;/span&gt;. If you&amp;#8217;re lucky that will already solve your&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;Some other time the following series of commands seems to help solve the issue at&amp;nbsp;hand:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; vagrant halt &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sudo rm -f /opt/vagrant-vmware-desktop/settings/nat.json &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sudo killall vagrant-vmware-utility &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
vagrant up
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that doesn&amp;#8217;t solve you&amp;#8217;re problem, you can try a combination of both approaches. If this doesn&amp;#8217;t work you have to continue googling&amp;nbsp;;)&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Vagrant"></category><category term="VMware Fusion"></category></entry><entry><title>How To Remove PDF Write Protection</title><link href="https://datapile.coffeecrew.org/how-to-remove-pdf-write-protection" rel="alternate"></link><published>2020-10-11T14:23:00+01:00</published><updated>2020-10-11T14:23:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2020-10-11:/how-to-remove-pdf-write-protection</id><summary type="html">&lt;p class="first last"&gt;This post shows you how you can remove write protection from a locked &lt;span class="caps"&gt;PDF&lt;/span&gt;.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Some PDFs you download are write protected. This is especially annoying if you do like to mark up the &lt;span class="caps"&gt;PDF&lt;/span&gt; in a utility like e.g. &lt;a class="reference external" href="https://devontechnologies.com/apps/devonthink"&gt;DEVONthink&lt;/a&gt;. It is not even possible to simply highlight something as long as the &lt;span class="caps"&gt;PDF&lt;/span&gt; is write&amp;nbsp;protected.&lt;/p&gt;
&lt;p&gt;Luckily the problem can be solved with a little command line application called &lt;code&gt;qpdf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;There are multiple ways to install the software. You can either use the package manager of your operating system or you can use &lt;a class="reference external" href="https://www.docker.com/"&gt;Docker&lt;/a&gt;. This will allow you to quickly use the command and discard the whole execution environment if you no longer need&amp;nbsp;it.&lt;/p&gt;
&lt;div class="section" id="homebrew"&gt;
&lt;h3&gt;Homebrew&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;m on a Mac and if you have &lt;a class="reference external" href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; installed, you can execute &lt;code&gt;brew install qpdf&lt;/code&gt; in your terminal application. This will download and install the &lt;code&gt;qpdf&lt;/code&gt; command line tool that you can use to remove the &lt;span class="caps"&gt;PDF&lt;/span&gt; write&amp;nbsp;protection.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m running the following&amp;nbsp;version:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#$&amp;gt; qpdf --version
qpdf version 10.0.1
Run qpdf --copyright to see copyright and license information.
&lt;/pre&gt;
&lt;p class="last"&gt;Keep this in mind if a feature is not available or does not&amp;nbsp;work.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;#8217;re not on a Mac you need to use the package manager of your operating system to install the&amp;nbsp;application.&lt;/p&gt;
&lt;p&gt;You can use the utility like&amp;nbsp;so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#$&amp;gt; cd folder-with-pdf&lt;/span&gt;
&lt;span class="c1"&gt;#$&amp;gt; qpdf --replace-input my.pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="docker"&gt;
&lt;h3&gt;Docker&lt;/h3&gt;
&lt;p&gt;If you are already using &lt;a class="reference external" href="https://www.docker.com/"&gt;Docker&lt;/a&gt; then why not employ a container to get the job done. The container I am using is pretty heavyweight if you just need to use the little &lt;code&gt;qpdf&lt;/code&gt; utility and you may want to use a smaller container. However, if you&amp;#8217;re additionally documenting stuff with  &lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/"&gt;Sphinx&lt;/a&gt; or use &lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; to write your blog, the heavyweight container might be a good choice for you&amp;nbsp;anyway.&lt;/p&gt;
&lt;p&gt;You can use the &lt;a class="reference external" href="https://github.com/authsec/sphinx"&gt;custom Sphinx&lt;/a&gt; container as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#$&amp;gt; cd folder-with-pdf&lt;/span&gt;
&lt;span class="c1"&gt;#$&amp;gt; docker run --rm -it -v $(pwd):/docs authsec/sphinx qpdf --replace-input my.pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If you&amp;#8217;re on Windows, the current working directory needs to be specified with &lt;code&gt;${PWD}&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="PDF"></category></entry><entry><title>How To Start A Consul Docker Image</title><link href="https://datapile.coffeecrew.org/how-to-start-a-consul-docker-image" rel="alternate"></link><published>2016-09-20T21:48:12+01:00</published><updated>2016-09-20T21:48:12+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2016-09-20:/how-to-start-a-consul-docker-image</id><summary type="html">&lt;p class="first last"&gt;How to start a local consul&amp;nbsp;server.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you quickly have to start a &lt;a class="reference external" href="https://www.consul.io/"&gt;Consul&lt;/a&gt;  docker image you can use the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -p &lt;span class="m"&gt;8400&lt;/span&gt;:8400 -p &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:8500:8500 -p &lt;span class="m"&gt;8600&lt;/span&gt;:8600/udp -h node1 consul agent -dev -client &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is especially useful for development purposes and quick tests and should not be used in a productive&amp;nbsp;environment.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Consul"></category><category term="Database"></category></entry><entry><title>Upload Maven Artifacts Into Nexus 3</title><link href="https://datapile.coffeecrew.org/upload-maven-artifacts-into-nexus-3" rel="alternate"></link><published>2016-08-02T21:23:31+01:00</published><updated>2016-08-02T21:23:31+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2016-08-02:/upload-maven-artifacts-into-nexus-3</id><summary type="html">&lt;p class="first last"&gt;How to upload artifacts into Nexus 3 from the command&amp;nbsp;line.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Sometimes you need to upload an artifact into Nexus. With Nexus 2 this was very easy if you had filesystem access or access to the Web &lt;span class="caps"&gt;UI&lt;/span&gt;. In Nexus 3 you are no longer able to access the filesystem and do not have a &lt;span class="caps"&gt;UI&lt;/span&gt; to upload your artifacts. This is why you have to do it using the &lt;code&gt;mvn&lt;/code&gt; &lt;span class="caps"&gt;CLI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;If you have some strangely proxied system where you have &lt;code&gt;ssh&lt;/code&gt; access to the machine running Nexus you can also use &lt;span class="caps"&gt;SSH&lt;/span&gt; port forwarding if you are unable to reach the machine directly&amp;nbsp;otherwise.&lt;/p&gt;
&lt;p&gt;You need a configuration like this where the user has permission to deploy into your&amp;nbsp;repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;settings&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://maven.apache.org/SETTINGS/1.0.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
        &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;servers&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- Link this id here to the repo ID in the mirror section --&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;repo&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;deployment&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;password&amp;gt;&lt;/span&gt;password&lt;span class="nt"&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/servers&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/settings&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the &lt;a class="reference external" href="https://gist.github.com/authsec/b603d2eaf4afc02ca4802a450838e7a1"&gt;Gist here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;If that is out of the way you can use the &lt;span class="caps"&gt;CLI&lt;/span&gt; to upload the artifact like&amp;nbsp;so:&lt;/p&gt;
&lt;p&gt;Please note that in this case also a different configuration file is used to
upload the artifact, to avoid working with the deployment user for normal builds
where you want the user only to have read&amp;nbsp;permission.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mvn -s ~/.m2/settings.xml.upload deploy:deploy-file &lt;span class="se"&gt;\&lt;/span&gt;
    -DgroupId&lt;span class="o"&gt;=&lt;/span&gt;org.wildfly &lt;span class="se"&gt;\&lt;/span&gt;
    -DartifactId&lt;span class="o"&gt;=&lt;/span&gt;wildfly-dist &lt;span class="se"&gt;\&lt;/span&gt;
    -Dversion&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.0.0.Final &lt;span class="se"&gt;\&lt;/span&gt;
    -DgeneratePom&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -Dpackaging&lt;span class="o"&gt;=&lt;/span&gt;tar.gz &lt;span class="se"&gt;\&lt;/span&gt;
    -DrepositoryId&lt;span class="o"&gt;=&lt;/span&gt;repo &lt;span class="se"&gt;\&lt;/span&gt;
    -Durl&lt;span class="o"&gt;=&lt;/span&gt;http://repo.example.com/repository/thirdparty &lt;span class="se"&gt;\&lt;/span&gt;
    -Dfile&lt;span class="o"&gt;=&lt;/span&gt;wildfly-10.0.0.Final.tar.gz
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Maven"></category><category term="Nexus"></category></entry><entry><title>Back To QNAP</title><link href="https://datapile.coffeecrew.org/back-to-qnap" rel="alternate"></link><published>2016-06-15T22:36:12+01:00</published><updated>2016-06-15T22:36:12+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2016-06-15:/back-to-qnap</id><summary type="html">&lt;p class="first last"&gt;How to backup a remote folder to your &lt;span class="caps"&gt;QNAP&lt;/span&gt;&amp;nbsp;storage.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Sometimes you may want to backup/synchronize data from a remote server to your local &lt;span class="caps"&gt;QNAP&lt;/span&gt; server. This can be done fairly easily and efficiently using the already installed &lt;code&gt;rsync&lt;/code&gt; command.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;You need to have set up a passwordless &lt;span class="caps"&gt;SSH&lt;/span&gt; login from your &lt;span class="caps"&gt;QNAP&lt;/span&gt; to your remote host for the below script to&amp;nbsp;work.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In addition the script below will send an eMail once it finishes it&amp;#8217;s run. To get the script going on your machine, simply adapt the variables to point to your local directories and supply a valid eMail address (can be the same for &lt;span class="caps"&gt;FROM&lt;/span&gt; and &lt;span class="caps"&gt;TO&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;As any operating system upgrade will otherwise delete your backup script you need to place it onto the share disk itself, as this will prevent the script of being deleted during an upgrade operation (I suggest stuffing it into a Gist on Github as well&amp;nbsp;;)).&lt;/p&gt;
&lt;p&gt;I suggest putting the script in the following location if you have set up a &lt;span class="caps"&gt;RAID&lt;/span&gt; 5 array (the location may be slightly different for you setup) &lt;code&gt;/share/MD0_DATA&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c1"&gt;# Script to periodically synchronize a remote directory with your&lt;/span&gt;
&lt;span class="c1"&gt;# local QNAP storage.&lt;/span&gt;

&lt;span class="c1"&gt;# Source folders/user on remote machine&lt;/span&gt;
&lt;span class="nv"&gt;BACKUP_SOURCE_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;backup-user&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BACKUP_SOURCE_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;backuphost.example.com&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BACKUP_SOURCE_FOLDER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/backup/subdir&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Directory to save the remote backup locally&lt;/span&gt;
&lt;span class="nv"&gt;BACKUP_SINK_FOLDER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/share/MD0_DATA/Qmultimedia/backup-dir&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# For grepping the available space&lt;/span&gt;
&lt;span class="nv"&gt;BACKUP_SHARE_MOUNT_POINT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/share/MD0_DATA&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;SUBJ_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;[RSYNC BACKUP]&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SUBJECT_FAIL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SUBJ_PREFIX&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Synchronization unsuccessful!&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SUBJECT_SUCCESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SUBJ_PREFIX&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; Synchronization successful!&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;MAIL_TO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hansi@example.com&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;MAIL_FROM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hansi-machine@example.com&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp/email_body.txt&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;RSYNC_CONTENT_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp/rsyncContent.txt&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Sends a mail message&lt;/span&gt;
&lt;span class="c1"&gt;# $1 = subject&lt;/span&gt;
&lt;span class="c1"&gt;# $2 = to&lt;/span&gt;
&lt;span class="c1"&gt;# $3 = from&lt;/span&gt;
&lt;span class="c1"&gt;# $4 = msg&lt;/span&gt;
send_mail&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;tmpfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp/sendmail.tmp&amp;quot;&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;Subject: &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;\r&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;To: &lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;\r&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;From: &lt;/span&gt;&lt;span class="nv"&gt;$3&lt;/span&gt;&lt;span class="s2"&gt;\r&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;\r&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
   cat &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
   /bin/echo -e &lt;span class="s2"&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
   /bin/echo -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$4&lt;/span&gt;&lt;span class="s2"&gt;\r\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
/usr/sbin/sendmail -t &amp;lt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$tmpfile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
rm &lt;span class="nv"&gt;$tmpfile&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

/bin/echo -e &lt;span class="s2"&gt;&amp;quot;Backup started at: &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;\n&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;Space available on backup disk (before backup)&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df -h &lt;span class="p"&gt;|&lt;/span&gt; head -n1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df -h &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SHARE_MOUNT_POINT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

/bin/echo -e &lt;span class="s2"&gt;&amp;quot;The following output was produced by the rsync command:\n&amp;quot;&lt;/span&gt; &amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RSYNC_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/usr/bin/rsync -azhv &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SOURCE_USER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;@&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SOURCE_HOST&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SOURCE_FOLDER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SINK_FOLDER&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RSYNC_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="nv"&gt;SUBJECT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SUBJECT_SUCCESS&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="nv"&gt;SUBJECT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SUBJECT_FAIL&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

/bin/echo -e &lt;span class="s2"&gt;&amp;quot;Backup ended at: &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;Space available on backup disk (after backup)&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df -h &lt;span class="p"&gt;|&lt;/span&gt; head -n1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;df -h &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BACKUP_SHARE_MOUNT_POINT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
/bin/echo -e &lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

/bin/cat &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RSYNC_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

send_mail &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SUBJECT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MAIL_TO&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MAIL_FROM&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MSG_CONTENT_FILE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the &lt;a class="reference external" href="https://gist.github.com/authsec/42b3c5099e1cc45bc761c8bb6366ede8"&gt;Gist here&lt;/a&gt;!&lt;/p&gt;
&lt;div class="section" id="executing-a-daily-backup"&gt;
&lt;h2&gt;Executing a Daily&amp;nbsp;Backup&lt;/h2&gt;
&lt;p&gt;Once the script is in it&amp;#8217;s place you need to configure a cron job so it will be executed let&amp;#8217;s say once a day at 5 &lt;span class="caps"&gt;AM&lt;/span&gt;. To do so simply type &lt;code&gt;crontab -e&lt;/code&gt; into your terminal as admin user and add a line like this at the end of the&amp;nbsp;file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;0 5 * * * /share/MD0_DATA/backupRemoteDirToQnap.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There you have it, nice and shiny&amp;nbsp;backup.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Shell"></category><category term="Bash"></category><category term="Backup"></category><category term="QNAP"></category></entry><entry><title>How To Setup Hovercraft On Mac OS</title><link href="https://datapile.coffeecrew.org/how-to-setup-hovercraft-on-mac-os" rel="alternate"></link><published>2016-05-27T20:02:00+01:00</published><updated>2016-05-27T20:02:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2016-05-27:/how-to-setup-hovercraft-on-mac-os</id><summary type="html">&lt;p class="first last"&gt;How to set up Hovercraft on Mac &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;X.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you want to setup hovercraft for creating presentations on your Mac, the following steps may help if you already have &lt;a class="reference external" href="https://www.macports.org/"&gt;MacPorts&lt;/a&gt;&amp;nbsp;installed.&lt;/p&gt;
&lt;p&gt;At first install python if you haven&amp;#8217;t&amp;nbsp;already:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; sudo port install python33 py33-pip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you&amp;#8217;ll run into problems, you have to export the language for the next command to run successfully. So add these two lines to your &lt;code&gt;~/.bash_profile&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LC_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And while we&amp;#8217;re at it, add the following path to your &lt;code&gt;PATH&lt;/code&gt; variable as well, so you can later access the &lt;code&gt;hovercraft&lt;/code&gt; command&amp;nbsp;directly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; /opt/local/Library/Frameworks/Python.framework/Versions/3.3/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your path then looks something like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/local/bin:/opt/local/sbin:/opt/local/Library/Frameworks/Python.framework/Versions/3.3/bin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can finally install hovercraft like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&amp;gt; sudo -H pip install hovercraft
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Happy&amp;nbsp;hovercrafting!&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="Presentation"></category><category term="Hovercraft"></category></entry><entry><title>Quickly Rename a Bunch Of Files With Bash</title><link href="https://datapile.coffeecrew.org/quickly-rename-a-bunch-of-files-with-bash" rel="alternate"></link><published>2015-11-22T18:36:12+01:00</published><updated>2015-11-22T18:36:12+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2015-11-22:/quickly-rename-a-bunch-of-files-with-bash</id><summary type="html">&lt;p class="first last"&gt;How to bulk rename files with&amp;nbsp;bash.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Sometimes you might feel the need to rename a bunch of files from one file extension to&amp;nbsp;another.&lt;/p&gt;
&lt;p&gt;This can easily be done with built in shell functions. To quickly rename a bunch of file endings from say for example &lt;code&gt;*.markdown&lt;/code&gt; to &lt;code&gt;*.md&lt;/code&gt; you simply can execute the following (&lt;code&gt;bash&lt;/code&gt;)&amp;nbsp;command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; i in *.markdown&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; mv &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;%.markdown&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Shell"></category><category term="Bash"></category></entry><entry><title>Setup A Local DNS Server For Development</title><link href="https://datapile.coffeecrew.org/setup-a-local-dns-server-for-development" rel="alternate"></link><published>2015-11-22T18:02:00+01:00</published><updated>2015-11-22T18:02:00+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2015-11-22:/setup-a-local-dns-server-for-development</id><summary type="html">&lt;p class="first last"&gt;How to set up a local &lt;span class="caps"&gt;DNS&lt;/span&gt; server for&amp;nbsp;Development.&lt;/p&gt;
</summary><content type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This was implemented and tested with Mac &lt;span class="caps"&gt;OS&lt;/span&gt; 10.10.4 and Dnsmasq&amp;nbsp;2.75&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;When you develop a web site or when you want to address multiple virtual machines by name on your local machine, you need to find a solution to implement&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;You can either input all your host names into your local &lt;code&gt;/etc/resolv.conf&lt;/code&gt; which may not result in a managable scenario after some time, or you can just install &lt;code&gt;Dnsmasq&lt;/code&gt; which is a local &lt;span class="caps"&gt;DNS&lt;/span&gt; responder that allows you to manage your own custom domain or extend the dns domain name space of another&amp;nbsp;service.&lt;/p&gt;
&lt;p&gt;You can install &lt;code&gt;Dnsmasq&lt;/code&gt; from &lt;code&gt;ports&lt;/code&gt; or probably &lt;code&gt;homebrew&lt;/code&gt; if you&amp;#8217;re on a Mac or get it from your local packet manager on your favourite Linux&amp;nbsp;distribution.&lt;/p&gt;
&lt;p&gt;After the installation just make sure that you are pointing you operating systems &lt;span class="caps"&gt;DNS&lt;/span&gt; resolution to your local host&amp;nbsp;instance.&lt;/p&gt;
&lt;p&gt;To resolve the usual internet domains via dnsmasq as well be sure to include your official &lt;span class="caps"&gt;DNS&lt;/span&gt; server in the&amp;nbsp;configration.&lt;/p&gt;
&lt;p&gt;The Dnsmasq configuration file can be found at &lt;code&gt;/opt/local/etc/dnsmasq.conf&lt;/code&gt; if you installed from ports. My configuration file is somewhat along these&amp;nbsp;lines.&lt;/p&gt;
&lt;p&gt;You probably want to use sudo to change this file for editing like for example so &lt;code&gt;sudo vim /opt/local/etc/dnsmasq.conf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;resolv-file=/etc/resolv.conf
# My local IP address
server=192.168.221.1
# Both are googles DNS servers
server=8.8.8.8
server=8.8.4.4

# here go the IP addresses you want to remap or setup as new
address=/alpha1.cluster.local.domain/172.16.232.135
address=/red.alpha1.cluster.local.domain/172.16.232.141
address=/black.alpha1.cluster.local.domain/172.16.232.141
address=/green.alpha2.cluster.local.domain/172.16.232.132
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you have changed the configuration you probably want to flush the &lt;span class="caps"&gt;DNS&lt;/span&gt; cache and reload the service by issuing the following&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo port unload dnsmasq &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sudo killall -HUP mDNSResponder &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sudo port load dnsmasq
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="DNS"></category></entry><entry><title>Accessing Basic Auth Protected Maven Repositories</title><link href="https://datapile.coffeecrew.org/accessing-basic-auth-protected-maven-repositories" rel="alternate"></link><published>2015-11-22T17:23:31+01:00</published><updated>2015-11-22T17:23:31+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2015-11-22:/accessing-basic-auth-protected-maven-repositories</id><summary type="html">&lt;p class="first last"&gt;How to access a basic auth protected maven&amp;nbsp;repository.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;When you try to access a basic auth protected maven repository you might actually already run into all sorts of weird errors, but now trying a basic auth protected maven repository during a Arquillian build when it is creating the&amp;nbsp;deployment.&lt;/p&gt;
&lt;p&gt;You migh have figured out the first part of accessing the maven repositoryis setting a &lt;code&gt;Authorization&lt;/code&gt; header and your configuration looks something like this (the encoded username is &lt;code&gt;test&lt;/code&gt; and the password is &lt;code&gt;s3cur3&lt;/code&gt;)&amp;nbsp;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;servers&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Link this id here to the repo ID in the mirror section --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;repo&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;httpHeaders&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Authorization&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;Basic dGVzdDpzM2N1cjM=&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/httpHeaders&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/servers&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What you now just need to do on top of that is add the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; to your &lt;code&gt;settings.xml&lt;/code&gt; configuration file like&amp;nbsp;so.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;servers&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;server&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Link this id here to the repo ID in the mirror section --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;id&amp;gt;&lt;/span&gt;repo&lt;span class="nt"&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;username&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/username&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;password&amp;gt;&lt;/span&gt;s3cur3&lt;span class="nt"&gt;&amp;lt;/password&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;httpHeaders&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Authorization&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;Basic dGVzdDpzM2N1cjM=&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/httpHeaders&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/server&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/servers&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Get the &lt;a class="reference external" href="https://gist.github.com/anonymous/bc3a2bc73d66ecb2a9f163a99618cdcd"&gt;Gist here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;You especially need add values for these two if you run into the following&amp;nbsp;exception.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;RuntimeException&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="n"&gt;deployment&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jboss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shrinkwrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Archive&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;coffeecrew&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createDeployment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;459&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveArtifacts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;262&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveArtifact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultArtifactResolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;239&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultArtifactDescriptorReader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;loadPom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultArtifactDescriptorReader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;320&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultArtifactDescriptorReader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readArtifactDescriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultArtifactDescriptorReader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;217&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;461&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;process&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;573&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;collectDependencies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultDependencyCollector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;261&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;internal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;DefaultRepositorySystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveDependencies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DefaultRepositorySystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;342&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jboss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shrinkwrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bootstrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MavenRepositorySystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveDependencies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MavenRepositorySystem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jboss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shrinkwrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MavenWorkingSessionImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolveDependencies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MavenWorkingSessionImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;266&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jboss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shrinkwrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MavenStrategyStageBaseImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MavenStrategyStageBaseImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jboss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shrinkwrap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;resolver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;MavenStrategyStageBaseImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MavenStrategyStageBaseImpl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Caused&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;transfer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ArtifactTransferException&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;transfer&lt;/span&gt; &lt;span class="n"&gt;artifact&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;slf4j&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;slf4j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;log4j12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.4.3&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nf"&gt;repo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//repo.protected.example.com/content/groups/internal/): Access denied to: https://repo.protected.example.com/content/groups/internal/org/slf4j/slf4j-log4j12/1.4.3/slf4j-log4j12-1.4.3.pom&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;WagonRepositoryConnector$6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WagonRepositoryConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1016&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;WagonRepositoryConnector$6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WagonRepositoryConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1004&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;WagonRepositoryConnector$GetTask&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WagonRepositoryConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;725&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrency&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;RunnableErrorForwarder$1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RunnableErrorForwarder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;runWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1142&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ThreadPoolExecutor$Worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;617&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;745&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Caused&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;authorization&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;AuthorizationException&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Access&lt;/span&gt; &lt;span class="n"&gt;denied&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//repo.protected.example.com/content/groups/internal/org/slf4j/slf4j-log4j12/1.4.3/slf4j-log4j12-1.4.3.pom&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LightweightHttpWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillInputData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LightweightHttpWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;144&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;116&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getIfNewer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;maven&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StreamWagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wagon&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;WagonRepositoryConnector$GetTask&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WagonRepositoryConnector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;660&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eclipse&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;aether&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrency&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;RunnableErrorForwarder$1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RunnableErrorForwarder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;runWorker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1142&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;concurrent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ThreadPoolExecutor$Worker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;617&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;java&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;745&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Arquillian"></category><category term="Testing"></category></entry><entry><title>Checklists in LaTeX</title><link href="https://datapile.coffeecrew.org/checklists-in-latex" rel="alternate"></link><published>2015-09-24T23:40:27+02:00</published><updated>2015-09-24T23:40:27+02:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2015-09-24:/checklists-in-latex</id><summary type="html">&lt;p class="first last"&gt;How to create a checkbox in&amp;nbsp;LaTeX?&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Did you ever feel the need for a simple checkbox in a letter? So did I. After searching for a while I did not really come up with a simple copy and pasteable solution to this problem. Most solutions seem to prefer the &lt;code&gt;hyperref&lt;/code&gt; package which enables you to put interactive, clickable checkboxes inside your &lt;span class="caps"&gt;PDF&lt;/span&gt; document, but what if you actually need to physically send the&amp;nbsp;document?&lt;/p&gt;
&lt;p&gt;As it turns out the solution is actually not that hard, a few &lt;code&gt;mbox&lt;/code&gt;es and &lt;code&gt;adjustbox&lt;/code&gt;es later I had a solution that did the trick for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;At the very basic of the box is this block which actually creates the box &lt;em&gt;and&lt;/em&gt; centers the text behind it in the middle of the&amp;nbsp;box.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\mbox&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\adjustbox&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;stack=cc,fbox&lt;span class="nb"&gt;}{&lt;/span&gt;&lt;span class="k"&gt;\makebox&lt;/span&gt;(6,6)&lt;span class="nb"&gt;{}}&lt;/span&gt; Yes I will.&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\\&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The parameters of the &lt;code&gt;makebox&lt;/code&gt; command define how big the box to check will actually&amp;nbsp;be.&lt;/p&gt;
&lt;p&gt;If you want to add a place where the future checkbox checker can put his signature to sign that he checked one of the checkboxes, you can additionally put something like this into your page, which will render the supplied text and a slightly subscript&amp;nbsp;line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\mbox&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;[t]&lt;span class="nb"&gt;{&lt;/span&gt;18ex&lt;span class="nb"&gt;}&lt;/span&gt;
     Date and signature
   &lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;minipage&lt;span class="nb"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;\hspace&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;1ex&lt;span class="nb"&gt;}&lt;/span&gt;&lt;span class="k"&gt;\rule&lt;/span&gt;&lt;span class="na"&gt;[-3ex]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;12cm&lt;span class="nb"&gt;}{&lt;/span&gt;.5pt&lt;span class="nb"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where the value &lt;code&gt;18ex&lt;/code&gt; of the &lt;code&gt;minipage&lt;/code&gt; environment controls the width of the box before the line. The parameters of the &lt;code&gt;rule&lt;/code&gt; command are the position of the line (&lt;code&gt;-3ex&lt;/code&gt;) (which makes it subscript, if you want that superscript make this value positive), the length of the rule (&lt;code&gt;12cm&lt;/code&gt;) and the thickness of it (&lt;code&gt;.5pt&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;So if you pimp this a little bit the code for a full letter with checkboxes looks like &lt;a class="reference external" href="https://datapile.coffeecrew.org/downloads/checkbox-letter.tex"&gt;this&lt;/a&gt;.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="LaTeX"></category></entry><entry><title>Customizing Emacs</title><link href="https://datapile.coffeecrew.org/customizing-emacs" rel="alternate"></link><published>2010-11-04T14:00:34+01:00</published><updated>2010-11-04T14:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-11-04:/customizing-emacs</id><summary type="html">&lt;p class="first last"&gt;This article will how to customize the emacs&amp;nbsp;editor.&lt;/p&gt;
</summary><content type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This tutorial was tested with &lt;span class="caps"&gt;GNU&lt;/span&gt; Emacs&amp;nbsp;23.0.91.1&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Some of you might be forced to spent nearly the whole day in a text editor like e.g. emacs to do their work. This usually is especially true for developers, that have to write code the whole day and therefore are forced to look into their editor the whole day. So why not customize it a little, so work might be more pleasant in the&amp;nbsp;end?&lt;/p&gt;
&lt;p&gt;This article will show you how you can customize emacs to hopefully suit your needs. Since I am using Ubuntu, which is a Debian based distribution, the installation of packages might vary for your&amp;nbsp;distribution.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;In order for this customization to work, you need to get some things first. This includes the development version of emacs, which in my distribution is marked as emacs-snapshot, and the Terminus font, which is according to many users &lt;em&gt;the&lt;/em&gt; font if you have to work long on your computer. That&amp;#8217;s what I can say too, the font is very pleasant on the&amp;nbsp;eyes.&lt;/p&gt;
&lt;p&gt;So, be sure to have the following stuff&amp;nbsp;available:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.is-vn.bg/hamster/"&gt;The Terminus&amp;nbsp;font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gnu.org/software/emacs/emacs-faq.html#Installing-Emacs"&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the development (snapshot) version of emacs you&amp;#8217;d probably have to check out the &lt;span class="caps"&gt;CVS&lt;/span&gt; repository, if you&amp;#8217;re lucky, version 23 is released when you read this&amp;nbsp;;).&lt;/p&gt;
&lt;p&gt;On an Ubuntu based installation, these packages are quite easy to get, simply enter the following commands in your&amp;nbsp;terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:$ sudo aptitude install &lt;span class="se"&gt;\&lt;/span&gt;
   console-terminus xfonts-terminus &lt;span class="se"&gt;\&lt;/span&gt;
   xfonts-terminus-dos xfonts-terminus-oblique &lt;span class="se"&gt;\&lt;/span&gt;
   emacs-snapshot emacs-snapshot-gtk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do have the non-snapshot edition of emacs already installed on
your system, you might want to update your default, be executing the
following commands and select the snapshot as the default being
started when you type &lt;cite&gt;emacs&lt;/cite&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo update-alternatives --config emacs
$ sudo update-alternatives --config emacsclient
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should now be able to type &lt;code&gt;emacs&lt;/code&gt; into your terminal and the emacs-snapshot will be&amp;nbsp;started.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="color-themes"&gt;
&lt;h2&gt;Color&amp;nbsp;Themes&lt;/h2&gt;
&lt;p&gt;I like colors, and I think the basic color theme that comes with emacs is not very nice. So I decided to install some color themes. Luckily these color themes can be easily installed on Ubuntu. If you are using another distribution which might not have support for that, you might want to try &lt;a class="reference external" href="http://www.nongnu.org/color-theme/"&gt;downloading and installing it manually&lt;/a&gt;. For the automatic version, simply&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install emacs-goodies-el
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the installation completes, you should be able to start emacs and select a color theme like &amp;#8220;Subtle Hacker&amp;#8221; or &amp;#8220;Gnome 2&amp;#8221; with &lt;code&gt;M-x color-theme-select&lt;/code&gt;. The &amp;#8220;Save customization&amp;#8221; feature in the snapshot I am using (&lt;span class="caps"&gt;GNU&lt;/span&gt; Emacs 23.0.91.1) does not seem to work unfortunately. There is one &amp;#8220;trick&amp;#8221; though that might work; if the customization file does not yet exist, saving seems to&amp;nbsp;work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="customization-files"&gt;
&lt;h2&gt;Customization&amp;nbsp;Files&lt;/h2&gt;
&lt;p&gt;If you externalize your configuration into a -custom.el file, you end up with two files, the .emacs and the .emacs-custom.el file (or whatever you name it). My files look as&amp;nbsp;follows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gnu.org/software/emacs/emacs-faq.html#Installing-Emacs"&gt;http://www.gnu.org/software/emacs/emacs-faq.html#Installing-Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.is-vn.bg/hamster"&gt;http://www.is-vn.bg/hamster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.nongnu.org/color-theme"&gt;http://www.nongnu.org/color-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://homepages.inf.ed.ac.uk/s0243221/emacs"&gt;http://homepages.inf.ed.ac.uk/s0243221/emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://amrmostafa.org/bearable-emacs-recipe"&gt;http://amrmostafa.org/bearable-emacs-recipe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://peadrop.com/blog/2007/01/06/pretty-emacs"&gt;http://peadrop.com/blog/2007/01/06/pretty-emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://fractal.csie.org/~eric/wiki/Terminus_font"&gt;http://fractal.csie.org/~eric/wiki/Terminus_font&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://copyleft.free.fr/wordpress/index.php/2009/04/24/nice-fonts-with-emacs-23-snapshot"&gt;http://copyleft.free.fr/wordpress/index.php/2009/04/24/nice-fonts-with-emacs-23-snapshot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Editor"></category><category term="Emacs"></category></entry><entry><title>Roller template</title><link href="https://datapile.coffeecrew.org/roller-template" rel="alternate"></link><published>2010-11-04T11:11:11+01:00</published><updated>2010-11-04T11:11:11+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-11-04:/roller-template</id><summary type="html">&lt;p class="first last"&gt;Theme/Template for Apache&amp;nbsp;Roller.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Since there has been some interest in the roller template that I have designed, I decided to upload it here, so you can freely use it. You probably want to exchange the pictures and if you do have to modify any of them template files, I suggest taking a deeper look into the &lt;a class="reference external" href="http://opensource.become.com/apache/roller/roller-4/v4.0.1/docs/roller-template-guide.pdf"&gt;template guide&lt;/a&gt;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://datapile.coffeecrew.org/downloads/coffeecrew-roller-template.tar.gz"&gt;Download&amp;nbsp;template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Infrastructure"></category><category term="Roller"></category><category term="Theme"></category></entry><entry><title>XviD, AVI, FLV, MKV support for FrontRow on Mac OS X</title><link href="https://datapile.coffeecrew.org/xvid-avi-flv-mkv-support-for-frontrow-on-mac-os-x" rel="alternate"></link><published>2010-11-04T09:31:11+01:00</published><updated>2010-11-04T09:31:11+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-11-04:/xvid-avi-flv-mkv-support-for-frontrow-on-mac-os-x</id><summary type="html">&lt;p class="first last"&gt;Support different media formats in FrontRwo on Mac &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;X.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Have you ever wondered why FrontRow does not play your precious &lt;span class="caps"&gt;AVI&lt;/span&gt;/XviD/&lt;span class="caps"&gt;MKV&lt;/span&gt; and the like files? The Answer is the codecs are missing. The missing codecs need to be installed as extensions to Quicktime since FrontRow uses Quicktime to play it&amp;#8217;s content listed in the&amp;nbsp;library.&lt;/p&gt;
&lt;p&gt;The logical next step is to download the missing libraries and install them one by &amp;#8230; really? Actually - no. Luckily there are a few guys that have built a simple solution to install these missing codecs on your&amp;nbsp;mac.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://perian.org/"&gt;Download the codec pack from perian.org&lt;/a&gt; and have fun watching your &lt;span class="caps"&gt;AVI&lt;/span&gt;/XviD/&lt;span class="caps"&gt;MKV&lt;/span&gt; encoded&amp;nbsp;videos.&lt;/p&gt;
</content><category term="Infrastructure"></category><category term="OS X"></category></entry><entry><title>Backing up roller weblogger</title><link href="https://datapile.coffeecrew.org/backing-up-roller-weblogger" rel="alternate"></link><published>2010-11-01T09:00:34+01:00</published><updated>2010-11-01T09:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-11-01:/backing-up-roller-weblogger</id><summary type="html">&lt;p class="first last"&gt;This guide will walk you through installing the PostgreSQL database for use in Apache&amp;nbsp;Roller.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;If you followed the &lt;a class="reference external" href="https://datapile.coffeecrew.org/setup-roller-weblogger-41-on-glassfish-v2"&gt;Setup Roller Weblogger 4.1 On Glassfish V2&lt;/a&gt; tutorial, or you do have a roller installation already in place, you probably want to back that up&amp;nbsp;somehow.&lt;/p&gt;
&lt;div class="section" id="backup-the-file-system"&gt;
&lt;h2&gt;Backup the file&amp;nbsp;system&lt;/h2&gt;
&lt;p&gt;Since I do not know where you possibly will have installed roller to, I am using the locations from the previous how to. The backup procedure should not be that complex after&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;The data residing on your filesystem (I know, the database resides on the file system too), is the data you uploaded into you blog. You do have a &lt;code&gt;/opt/roller/uploads&lt;/code&gt; directory for example. Depending on how many blogs you have created, there are numerous folders inside. Each sub-folder represents data for another blog. So if your blog is called &amp;#8220;datapile&amp;#8221;, then there will be a &amp;#8220;datapile&amp;#8221;&amp;nbsp;sub-folder.&lt;/p&gt;
&lt;p&gt;For the sake of simplicity you can of course just backup the whole &lt;code&gt;/opt/roller&lt;/code&gt; folder which should also save the custom themes you created eventually. If you installed it the way as described in the tutorial at the beginning, you do also backup search indexes and the glassfish installation with&amp;nbsp;this.&lt;/p&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;You might not have deleted the &lt;code&gt;/opt/roller/tmp&lt;/code&gt; directory yet. You might backup this temporary files too in this case. If you backup the full &lt;code&gt;/opt/roller&lt;/code&gt; directory, you might remove the &lt;code&gt;/opt/roller/tmp&lt;/code&gt; folder manually, or at least move it to another location, so your compressed archive will not pack that (unnecessary) information too. A simple command line might look like as&amp;nbsp;follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar cjvf /tmp/roller.tar.bz2 roller/
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="restore-the-file-system"&gt;
&lt;h2&gt;Restore the file&amp;nbsp;system&lt;/h2&gt;
&lt;p&gt;In order to restore the file system you have to recreate your installation and then copy the files back to the location where the installation can find them, or simply &lt;code&gt;untar&lt;/code&gt; your backed up &lt;code&gt;/opt/roller&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="backup-the-database"&gt;
&lt;h2&gt;Backup the&amp;nbsp;database&lt;/h2&gt;
&lt;p&gt;The database can be backed up pretty easily. The part to remember is that you &lt;em&gt;switch to the postgres user&lt;/em&gt; when you execute the &lt;code&gt;pg_dumpall &amp;gt; /tmp/rollerDb.dump&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;The backup command order in this case&amp;nbsp;is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="c1"&gt;# su - postgres&lt;/span&gt;
        $ pg_dumpall &amp;gt; /tmp/rollerDb.dump
        $ pg_dumpall &lt;span class="p"&gt;|&lt;/span&gt; bzip2 &amp;gt; /tmp/rollerDb.dump.bz2 &lt;span class="c1"&gt;#bzipped version&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="restore-the-database"&gt;
&lt;h2&gt;Restore the&amp;nbsp;database&lt;/h2&gt;
&lt;p&gt;Restoring the full database is a pretty easy task. On a test installation I did, this worked like a charm. I really hope there&amp;#8217;s nothing more to add to&amp;nbsp;it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="c1"&gt;# su - postgres&lt;/span&gt;
        $ createdb rollerdb
        $ cat /tmp/rollerDb.dump.bz2 &lt;span class="p"&gt;|&lt;/span&gt; bunzip2 &lt;span class="p"&gt;|&lt;/span&gt; psql postgres
        $ psql -f /tmp/rollerDb.dump postgres &lt;span class="c1"&gt;#restore from non-compressed file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After having played back the information into the database, you might need to adopt the postgres passwords back to the values you have set them during your installation on the servlet container (in this case glassfish). You might otherwise end up with some ugly exceptions. To do that start the &lt;code&gt;psql&lt;/code&gt; tool as postgres user and enter the following statements (of course adopt to your password ;)&amp;nbsp;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;sigusr1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt;
&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=#&lt;/span&gt; &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="n"&gt;roller&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;roller&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=#&lt;/span&gt; &lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;Especially when it comes to handling the database stuff, the PostgreSQL documentation was very&amp;nbsp;helpful.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.postgresql.org/docs/8.1/static/backup.html"&gt;http://www.postgresql.org/docs/8.1/static/backup.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Glassfish"></category><category term="Roller"></category><category term="Backup"></category></entry><entry><title>Switching roller from Derby to PostgreSQL</title><link href="https://datapile.coffeecrew.org/switching-roller-from-derby-to-postgresql" rel="alternate"></link><published>2010-10-31T14:00:34+01:00</published><updated>2010-10-31T14:00:34+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-10-31:/switching-roller-from-derby-to-postgresql</id><summary type="html">&lt;p class="first last"&gt;This guide will walk you through installing the PostgreSQL database for use in Apache&amp;nbsp;Roller.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Since Roller seems to have problems with the Glassfish built-in Derby database, especially when it comes to &amp;#8220;Full preview&amp;#8221; (you might end up with an &lt;span class="caps"&gt;HTTP&lt;/span&gt; 404 error code if you try to preview your post), you might want to switch your Roller installation to &lt;a class="reference external" href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article will explain, how you can switch the installed Roller instance from Glassfishs built-in derby database to the PostgreSQL&amp;nbsp;database.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This was implemented/tested with Roller Weblogger 4.1 and Glassfish&amp;nbsp;v2UR2&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quick-install"&gt;
&lt;h2&gt;Quick&amp;nbsp;install&lt;/h2&gt;
&lt;p&gt;For the people who don&amp;#8217;t care if anything goes wrong or just don&amp;#8217;t like to type at all, &lt;a class="reference external" href="https://gist.github.com/authsec/a048fb1d1ade8004dd55f4ede17c077b"&gt;here is a little script&lt;/a&gt;, which might help you save a few keystrokes. Just be aware of the fact that you might have to change a few variables inside the&amp;nbsp;script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="manual-installation"&gt;
&lt;h2&gt;Manual&amp;nbsp;installation&lt;/h2&gt;
&lt;p&gt;This describes basically what the script in the quick installation tries to achieve by being&amp;nbsp;run.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;As with the roller install itself, you need of course a few things before you can start. In this case you need of course the &lt;a class="reference external" href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; database itself and a &lt;span class="caps"&gt;JDBC&lt;/span&gt; driver to attach roller to the&amp;nbsp;database.&lt;/p&gt;
&lt;p&gt;The installation of the database depends on the type of operating system you are using. I describe the setup using a &lt;a class="reference external" href="http://www.debian.org/"&gt;Debian&lt;/a&gt; based system, since this is so nice and easy&amp;nbsp;:).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-database-driver"&gt;
&lt;h3&gt;Get the database&amp;nbsp;driver&lt;/h3&gt;
&lt;p&gt;To enable Glassfish to talk to your postgres installation, you have to supply it some code. Glassfish likes Java the best and you can get some &lt;span class="caps"&gt;JDBC&lt;/span&gt; drivers from &lt;a class="reference external" href="http://jdbc.postgresql.org/download.html"&gt;here&lt;/a&gt; , but specifically the &lt;a class="reference external" href="http://jdbc.postgresql.org/download/postgresql-8.3-604.jdbc3.jar"&gt;postgresql-8.3-604.jdbc3.jar&lt;/a&gt; is of interest to&amp;nbsp;us.&lt;/p&gt;
&lt;p&gt;So go get the &lt;span class="caps"&gt;JDBC&lt;/span&gt; driver and save it in &lt;code&gt;/opt/roller/glassfish/domains/roller/lib&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-database"&gt;
&lt;h3&gt;Install&amp;nbsp;database&lt;/h3&gt;
&lt;p&gt;For a debian based system just enter the following command as user root (or prefix it with sudo on ubuntu). You might of course have a newer version of postgresql available with you current&amp;nbsp;installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ aptitude install postgresql-8.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the installation finishes, you might want to create the database roller will be accessing later and also create a user for use with roller. This can be achieved by entering the following sequence of commands into a terminal of your&amp;nbsp;choice.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Be aware of the fact that you have to &lt;em&gt;execute&lt;/em&gt; the commands as user &lt;em&gt;postgres&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="c1"&gt;# Get root&lt;/span&gt;
        su -

        &lt;span class="c1"&gt;# Get postgres user&lt;/span&gt;
        su - postgres

        &lt;span class="c1"&gt;# create database&lt;/span&gt;
        createdb rollerdb

        &lt;span class="c1"&gt;# create roller user&lt;/span&gt;
        createuser roller
        &lt;span class="c1"&gt;# Answers&lt;/span&gt;
        &lt;span class="c1"&gt;# Shall the new role be a superuser? (y/n) n&lt;/span&gt;
        &lt;span class="c1"&gt;# Shall the new role be allowed to create databases? (y/n) n&lt;/span&gt;
        &lt;span class="c1"&gt;# Shall the new role be allowed to create more new roles? (y/n) n&lt;/span&gt;

        &lt;span class="c1"&gt;# Enter postgres prompt&lt;/span&gt;
        psql
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you are in the prompt which will look something like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Welcome&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;PostgreSQL&lt;/span&gt; &lt;span class="n"&gt;interactive&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="k"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;copyright&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;distribution&lt;/span&gt; &lt;span class="n"&gt;terms&lt;/span&gt;
                &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="k"&gt;SQL&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;
                &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="n"&gt;commands&lt;/span&gt;
                &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;terminate&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;semicolon&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;
                &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;

&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;=#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enter the following &lt;span class="caps"&gt;SQL&lt;/span&gt; statements which change the passwords for the roller
and postgres user&amp;nbsp;accordingly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="n"&gt;roller&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;roller&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;alter&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;postgres&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You are now finished using the postgres user. You may want to continue as user roller with the following&amp;nbsp;commands.&lt;/p&gt;
&lt;p&gt;If you followed the &lt;a class="reference external" href="https://datapile.coffeecrew.org/setup-roller-weblogger-41-on-glassfish-v2"&gt;Setup Roller Weblogger 4.1 On Glassfish V2&lt;/a&gt;  tutorial, you do have to do an additional step to get rid of the previously assigned &lt;span class="caps"&gt;JDBC&lt;/span&gt; connection; that is deleting the &lt;span class="caps"&gt;JDBC&lt;/span&gt; connection pool. Aside from that we simply create a &lt;span class="caps"&gt;JDBC&lt;/span&gt; connection pool and the according resource. Once that is done you might want to start configuring your roller&amp;nbsp;installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="c1"&gt;#if you followed glassfish ... (cleans jdbc resource too)&lt;/span&gt;
        ./bin/asadmin delete-jdbc-connection-pool --cascade rollerpool

        ./bin/asadmin create-jdbc-connection-pool
        --datasourceclassname org.postgresql.ds.PGSimpleDataSource &lt;span class="se"&gt;\&lt;/span&gt;
        --restype javax.sql.DataSource &lt;span class="se"&gt;\&lt;/span&gt;
        --property &lt;span class="nv"&gt;portNumber&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt;:password&lt;span class="o"&gt;=&lt;/span&gt;roller:user&lt;span class="o"&gt;=&lt;/span&gt;roller:serverName&lt;span class="o"&gt;=&lt;/span&gt;localhost:databaseName&lt;span class="o"&gt;=&lt;/span&gt;rollerdb &lt;span class="se"&gt;\&lt;/span&gt;
        rollerpool

        ./bin/asadmin ping-connection-pool rollerpool
        ./bin/asadmin create-jdbc-resource --connectionpoolid&lt;span class="o"&gt;=&lt;/span&gt;rollerpool jdbc/rollerdb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once that is finished, you should restart Glassfish in order to make changes effective. This is done through the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ su - roller -c &lt;span class="s2"&gt;&amp;quot;cd glassfish; ./bin/asadmin stop-domain roller&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
                                   su - roller -c &lt;span class="s2"&gt;&amp;quot;cd glassfish; ./bin/asadmin start-domain roller&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you have finished all that, you now should be able to point you browser to &lt;a class="reference external" href="http://localhost:8080/blogs"&gt;http://localhost:8080/blogs&lt;/a&gt; and start configuring your Roller installation. Have&amp;nbsp;fun.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Glassfish"></category><category term="Roller"></category><category term="Database"></category><category term="PostgreSQL"></category></entry><entry><title>Setup roller weblogger 4.1 on Glassfish v2</title><link href="https://datapile.coffeecrew.org/setup-roller-weblogger-41-on-glassfish-v2" rel="alternate"></link><published>2010-10-31T11:11:11+01:00</published><updated>2010-10-31T11:11:11+01:00</updated><author><name>Jens Frey</name></author><id>tag:datapile.coffeecrew.org,2010-10-31:/setup-roller-weblogger-41-on-glassfish-v2</id><summary type="html">&lt;p class="first last"&gt;This guide will walk you through installing the Apache Roller Blog Software, version&amp;nbsp;4.1(-dev).&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This guide will walk you through installing the Apache Roller Blog Software, version 4.1(-dev). The installation I did, resides on a Debian based distribution (Ubuntu works too, just prefix the commands with&amp;nbsp;sudo).&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This was implemented/tested with Roller Weblogger 4.1 and Glassfish&amp;nbsp;v2UR2&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="quick-install"&gt;
&lt;h2&gt;Quick&amp;nbsp;install&lt;/h2&gt;
&lt;p&gt;This is for the impatient, you need to have &lt;code&gt;jar&lt;/code&gt; and &lt;code&gt;wget&lt;/code&gt; in your $&lt;span class="caps"&gt;PATH&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;If you just want to have roller to be set up for you to do e.g. some work on roller templates, or just to basically play with it a bit, here is the real quick deal for you (This will install everything into&amp;nbsp;/opt/roller).&lt;/p&gt;
&lt;p&gt;Download the &lt;a class="reference external" href="https://raw.githubusercontent.com/authsec/examples/master/sh/rollerGlassfish.sh"&gt;automated installer script&lt;/a&gt;, save it to e.g. your home directory. Then call the script like &lt;code&gt;./rollerGlassfish.sh realLongKey1 realLongKey2 run-as-username run-as-groupname&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;You can get those long keys easily from &lt;a class="reference external" href="https://www.grc.com/passwords.htm"&gt;&lt;span class="caps"&gt;GRC&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="manual-installation"&gt;
&lt;h2&gt;Manual&amp;nbsp;installation&lt;/h2&gt;
&lt;p&gt;The following text basically describes what the script is automatically doing for you. This way you can change the according parameters which will affect your installation. Most probably you will just have to change the following variables inside the install&amp;nbsp;script.&lt;/p&gt;
&lt;div class="section" id="prerequisites"&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;You have to install a few things before you can actually start installing roller on your system. At first you need to be sure that the &lt;code&gt;jar&lt;/code&gt; command is installed on your system, since this is required for the build you will be doing on your system. On a Debian based system you can do that with the following&amp;nbsp;command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;root@sigusr1:$&lt;/span&gt; aptitude install sun-java5-jdk
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the &lt;span class="caps"&gt;JDK&lt;/span&gt; installation you basically have everything ready to go, but wait if you want to use my &lt;a class="reference external" href="https://raw.githubusercontent.com/authsec/examples/master/sh/rollerGlassfish.sh"&gt;automated installer script&lt;/a&gt; you need to have the &lt;code&gt;wget&lt;/code&gt; command installed too, since the script tries to download the Glassfish application server and the given Apache Roller version by itself in order to be able to install it for&amp;nbsp;you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#&lt;/span&gt;
        &lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/roller
        &lt;span class="nv"&gt;TARGET_TMP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TARGET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/tmp
        &lt;span class="nv"&gt;UPLOADS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/uploads
        &lt;span class="nv"&gt;THEMES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/themes
        &lt;span class="nv"&gt;PLANET_CACHE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/planetcache
        &lt;span class="nv"&gt;SEARCH_INDEX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$TARGET&lt;/span&gt;/searchindex
        &lt;span class="c1"&gt;#ROLLER_FILENAME=&amp;quot;apache-roller-4.0.1-snapshot-20080211.tar.gz&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;ROLLER_FILENAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apache-roller-4.1-snapshot-m1.tar.gz&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;CTX_ROOT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blogs&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gist: &lt;a class="reference external" href="https://gist.github.com/authsec/455940a3f6bd5673c1c9dd16ea4ec0af"&gt;https://gist.github.com/authsec/455940a3f6bd5673c1c9dd16ea4ec0af&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://glassfish.dev.java.net/downloads/v2ur2-b04.html"&gt;Download&amp;nbsp;Glassfish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="choose-install-location"&gt;
&lt;h4&gt;Choose install&amp;nbsp;location&lt;/h4&gt;
&lt;p&gt;As a last prerequisite step you need to choose an install location. I chose &lt;code&gt;/opt/roller&lt;/code&gt; to be the install location of my&amp;nbsp;choice.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-user-and-group"&gt;
&lt;h3&gt;Setup user and&amp;nbsp;group&lt;/h3&gt;
&lt;p&gt;As you probably won&amp;#8217;t be running roller as root, you&amp;#8217;ll have to setup a user and a group for your roller installation. This, again on Debian based systems, is done using the following&amp;nbsp;commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        mkdir /opt/roller
        addgroup --system roller
        adduser --home /opt/roller &lt;span class="se"&gt;\&lt;/span&gt;
        --shell /bin/bash &lt;span class="se"&gt;\&lt;/span&gt;
        --no-create-home &lt;span class="se"&gt;\&lt;/span&gt;
        --ingroup roller &lt;span class="se"&gt;\&lt;/span&gt;
        --disabled-password &lt;span class="se"&gt;\&lt;/span&gt;
        --system roller
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-glassfish"&gt;
&lt;h3&gt;Setup&amp;nbsp;Glassfish&lt;/h3&gt;
&lt;p&gt;I assume you downloaded roller and glassfish into &lt;code&gt;/opt/roller/tmp&lt;/code&gt;. In order to get the Glassfish installation working, you need to have &lt;code&gt;JAVA_HOME&lt;/code&gt; exported into your environment. Then you can start running the Glassfish installer. On a bourne shell do (inside the directory where you saved the Glassfish&amp;nbsp;installer):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/roller/tmp
        &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/java-1.5.0-sun
        java -Xmx256m -jar glassfish-installer-v2ur2-b04-linux.jar
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The installer will ask you if you are willing to accept the license agreement. If you are running this on a remote machine, it will ask you on the command line, whether or not you are willing to accept; on your local machine it will show a nice graphical dialog for you to accept. After that setup is completed, do (machine name is included, so you&amp;#8217;re able to see in which directory I&amp;#8217;m&amp;nbsp;operating)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/tmp$ mv glassfish ..
j@sigusr1:/opt/roller/tmp$ &lt;span class="nb"&gt;cd&lt;/span&gt; ../glassfish/
j@sigusr1:/opt/roller/glassfish$ chmod -R +x lib/ant/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a next step you have to setup a domain for roller within Glassfish, this is a rather easy task to&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/glassfish$ lib/ant/bin/ant -f setup.xml -Ddomain.name&lt;span class="o"&gt;=&lt;/span&gt;roller
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now start Glassfish, so we can do s.th. with it&amp;nbsp;&amp;#8230;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;j@sigusr1:/opt/roller/glassfish$ ./bin/asadmin start-domain roller
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="setup-built-in-database"&gt;
&lt;h4&gt;Setup built in&amp;nbsp;database&lt;/h4&gt;
&lt;p&gt;The following series of command all takes place inside the &lt;code&gt;/opt/roller/glassfish&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ ./bin/asadmin create-jdbc-connection-pool &lt;span class="se"&gt;\&lt;/span&gt;
        --datasourceclassname org.apache.derby.jdbc.EmbeddedDataSource &lt;span class="se"&gt;\&lt;/span&gt;
        --property &lt;span class="nv"&gt;databaseName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\$\{&lt;/span&gt;com.sun.aas.instanceRoot&lt;span class="se"&gt;\}&lt;/span&gt;/databases/rollerdb:&lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nv"&gt;connectionAttributes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="se"&gt;\;&lt;/span&gt;create&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; rollerpool
        ./bin/asadmin ping-connection-pool rollerpool
        ./bin/asadmin create-jdbc-resource --connectionpoolid&lt;span class="o"&gt;=&lt;/span&gt;rollerpool jdbc/rollerdb
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-jndi-mail-resource"&gt;
&lt;h4&gt;Setup &lt;span class="caps"&gt;JNDI&lt;/span&gt; mail&amp;nbsp;resource&lt;/h4&gt;
&lt;p&gt;If that would work in roller 4.1(-dev) with Glassfish, you would&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ ./bin/asadmin create-javamail-resource --mailhost localhost --mailuser rollermail --fromaddress roller&lt;span class="se"&gt;\@&lt;/span&gt;blogs&lt;span class="se"&gt;\.&lt;/span&gt;coffeecrew&lt;span class="se"&gt;\.&lt;/span&gt;org mail/Session
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="securing-glassfish"&gt;
&lt;h4&gt;Securing&amp;nbsp;Glassfish&lt;/h4&gt;
&lt;p&gt;Some of you might be thinking about running Glassfish behind an Apache reverse proxy. This is exactly what I am thinking about. So if you plan to do that, it might come in handy that Glassfish would only accept connections from the local machine and therefore not let anyone easily bypass your secured apache instance. First we delete both &lt;span class="caps"&gt;HTTP&lt;/span&gt; listener instances that are listening on ports 8080 and 8443 and then recreate the 8080 one. As we are proxying with apache, we do not need the &lt;span class="caps"&gt;SSL&lt;/span&gt; listener (port 8443)&amp;nbsp;anyway.&lt;/p&gt;
&lt;p&gt;And while we&amp;#8217;re just doing it, let&amp;#8217;s rebind those &lt;span class="caps"&gt;IIOP&lt;/span&gt; services&amp;nbsp;to.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$
        ./bin/asadmin delete-http-listener http-listener-1
        ./bin/asadmin delete-http-listener http-listener-2
        ./bin/asadmin create-http-listener --listeneraddress &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 --listenerport &lt;span class="m"&gt;8080&lt;/span&gt; --acceptorthreads &lt;span class="m"&gt;32&lt;/span&gt; --enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; --defaultvs server --securityenabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt; roller-listener

        &lt;span class="c1"&gt;# Configure admin page to listen locally too&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.http-service.http-listener.admin-listener.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1

        &lt;span class="c1"&gt;# Disable IIOP stuff to listen globally, we do not need that right now.&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.SSL.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.SSL_MUTUALAUTH.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.iiop-listener.orb-listener-1.address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1

        &lt;span class="c1"&gt;# Disable JMX connector for remote access&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.admin-service.jmx-connector.system.enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;

        &lt;span class="c1"&gt;# JMS&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.jms-service.jms-host.default_JMS_host.host&lt;span class="o"&gt;=&lt;/span&gt;localhost

        &lt;span class="c1"&gt;# Require client authentication, just to be sure ...&lt;/span&gt;
        ./bin/asadmin &lt;span class="nb"&gt;set&lt;/span&gt; server.iiop-service.client-authentication-required&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to make changes effective we have to restart Glassfish. But before that we want to make sure everything has correct permissions for our newly created user, won&amp;#8217;t&amp;nbsp;we?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;# Fix permissions&lt;/span&gt;
        chown -R roller:roller /opt/roller

        &lt;span class="c1"&gt;# Restart gf to make changes effective&lt;/span&gt;
        ./bin/asadmin stop-domain roller

        &lt;span class="c1"&gt;# Start as roller user&lt;/span&gt;
        su -c &lt;span class="s2"&gt;&amp;quot;./bin/asadmin start-domain roller&amp;quot;&lt;/span&gt; roller
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-and-configure-roller"&gt;
&lt;h3&gt;Setup and configure&amp;nbsp;Roller&lt;/h3&gt;
&lt;p&gt;Setting up Roller 4.1(-dev) is pretty easy. We start by extracting the tarball we downloaded earlier. Since we have set our theme directory to be &lt;code&gt;/opt/roller/themes&lt;/code&gt; we do have to copy the themes we want to use there. As a next step we &lt;em&gt;really want to have security keys **changed**&lt;/em&gt;. This is done by either editing the &lt;code&gt;security.xml&lt;/code&gt; file manually or using a &lt;code&gt;sed&lt;/code&gt; expression. After we have changed the keys, we can pack us a nice &lt;code&gt;roller.war&lt;/code&gt; file. The few commands below execute the described&amp;nbsp;actions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Roller setup&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/roller/tmp
        tar zxvf apache-roller-4.1-snapshot-m1.tar.gz

        &lt;span class="c1"&gt;#Copy themes&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; apache-roller*/webapp/roller/themes
        cp -vR * /opt/roller/themes

        &lt;span class="nb"&gt;cd&lt;/span&gt; ../WEB-INF
        cp security.xml /tmp

        &lt;span class="c1"&gt;# actually change keys&lt;/span&gt;
        cat /tmp/security.xml &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        sed &lt;span class="s2"&gt;&amp;quot;s/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;anonymous\&amp;quot;/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;myOwnLongKey\&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        sed &lt;span class="s2"&gt;&amp;quot;s/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;rollerlovesacegi\&amp;quot;/name=\&amp;quot;key\&amp;quot; value=\&amp;quot;myOwnLongKey2\&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        &amp;gt; security.xml

        &lt;span class="c1"&gt;#Pack war file&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; ..
        jar cvf ../../../roller.war *
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we&amp;#8217;re nearly finished &amp;#8230; just a few seconds away from experimenting with your own roller instance now :). As a next necessary step we need to create a custom configuration file for Roller. That configuration file has to be saved in &lt;code&gt;/opt/roller/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/code&gt; to take effect. The configuration file can be built as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Build roller-custom.properties&lt;/span&gt;
cat &lt;span class="s"&gt;&amp;lt;&amp;lt;EOF &amp;gt; $TARGET/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/span&gt;

&lt;span class="s"&gt;installation.type=auto&lt;/span&gt;

&lt;span class="s"&gt;#Should work with JNDI but maybe not with glassfish&lt;/span&gt;
&lt;span class="s"&gt;mail.configurationType=properties&lt;/span&gt;
&lt;span class="s"&gt;mail.hostname=localhost&lt;/span&gt;

&lt;span class="s"&gt;planet.aggregator.enabled=true&lt;/span&gt;
&lt;span class="s"&gt;uploads.dir=$UPLOADS&lt;/span&gt;
&lt;span class="s"&gt;themes.dir=$THEMES&lt;/span&gt;
&lt;span class="s"&gt;search.index.dir=$SEARCH_INDEX&lt;/span&gt;
&lt;span class="s"&gt;planet.aggregator.cache.dir=$PLANET_CACHE&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that the configuration is in place, we are finally ready to deploy the Roller application. With the deployment we are able to specify a context root, which is the (&lt;span class="caps"&gt;URL&lt;/span&gt;) location where your application can be reached later on. So if you specify &lt;code&gt;blogs&lt;/code&gt; then your application can later be accessed at &lt;code&gt;http://your.example.com:8080/blogs&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;#Deploy application&lt;/span&gt;
        &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$TARGET&lt;/span&gt;/glassfish
        ./bin/asadmin deploy --contextroot blogs ../tmp/roller.war
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just to be sure everything you&amp;#8217;ve installed so far has correct permission, you might want to run the following commands again. It fixes your permissions and runs Glassfish as roller&amp;nbsp;user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@sigusr1:$ &lt;span class="c1"&gt;# Fix permissions&lt;/span&gt;
        chown -R roller:roller /opt/roller

        &lt;span class="c1"&gt;#Restart gf to make changes effective&lt;/span&gt;
        ./bin/asadmin stop-domain roller

        &lt;span class="c1"&gt;# Start as roller user&lt;/span&gt;
        su -c &lt;span class="s2"&gt;&amp;quot;./bin/asadmin start-domain roller&amp;quot;&lt;/span&gt; roller
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you&amp;#8217;ve done all that you now should have a ready to go roller installation. Now go visit &lt;code&gt;http://localhost:8080/blogs&lt;/code&gt; and configure your shiny new roller installation. It is pretty much self explanatory, but if you need further assistance, you might want to have a look into the installation guide, which you can get &lt;a class="reference external" href="http://roller.apache.org/download.cgi"&gt;here&lt;/a&gt; (see chapter&amp;nbsp;8ff).&lt;/p&gt;
&lt;p&gt;Now after you&amp;#8217;ve set up everything exactly as you like, you should change &lt;code&gt;/opt/roller/glassfish/domains/roller/lib/classes/roller-custom.properties&lt;/code&gt; to read &lt;code&gt;installation.type=manual&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Infrastructure"></category><category term="Glassfish"></category><category term="Roller"></category></entry></feed>